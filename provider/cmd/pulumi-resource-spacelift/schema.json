{
    "name": "spacelift",
    "description": "A Pulumi package for creating and managing Spacelift resources.",
    "keywords": [
        "pulumi",
        "spacelift"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`spacelift` Terraform Provider](https://github.com/spacelift-io/terraform-provider-spacelift).",
    "repository": "https://github.com/spacelift-io/pulumi-spacelift",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiKeyEndpoint": {
                "type": "string",
                "description": "Endpoint to use when authenticating with an API key outside of Spacelift\n",
                "defaultInfo": {
                    "environment": [
                        "SPACELIFT_API_KEY_ENDPOINT"
                    ]
                }
            },
            "apiKeyId": {
                "type": "string",
                "description": "ID of the API key to use when executing outside of Spacelift\n",
                "defaultInfo": {
                    "environment": [
                        "SPACELIFT_API_KEY_ID"
                    ]
                }
            },
            "apiKeySecret": {
                "type": "string",
                "description": "API key secret to use when executing outside of Spacelift\n",
                "defaultInfo": {
                    "environment": [
                        "SPACELIFT_API_KEY_SECRET"
                    ]
                },
                "secret": true
            },
            "apiToken": {
                "type": "string",
                "description": "Spacelift token generated by a run, only useful from within Spacelift\n",
                "defaultInfo": {
                    "environment": [
                        "SPACELIFT_API_TOKEN"
                    ]
                },
                "secret": true
            }
        }
    },
    "types": {
        "spacelift:index/ModuleGitlab:ModuleGitlab": {
            "properties": {
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "namespace"
            ]
        },
        "spacelift:index/StackCloudformation:StackCloudformation": {
            "properties": {
                "entryTemplateFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stackName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "templateBucket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "entryTemplateFile",
                "region",
                "stackName",
                "templateBucket"
            ]
        },
        "spacelift:index/StackGitlab:StackGitlab": {
            "properties": {
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "namespace"
            ]
        },
        "spacelift:index/StackPulumi:StackPulumi": {
            "properties": {
                "loginUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stackName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "loginUrl",
                "stackName"
            ]
        },
        "spacelift:index/getModuleGitlab:getModuleGitlab": {
            "properties": {
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "namespace"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "spacelift:index/getStackCloudformation:getStackCloudformation": {
            "properties": {
                "entryTemplateFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stackName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "templateBucket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "entryTemplateFile",
                "region",
                "stackName",
                "templateBucket"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "spacelift:index/getStackGitlab:getStackGitlab": {
            "properties": {
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "namespace"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "spacelift:index/getStackPulumi:getStackPulumi": {
            "properties": {
                "loginUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stackName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "loginUrl",
                "stackName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "spacelift:index/getWorkerPoolsWorkerPool:getWorkerPoolsWorkerPool": {
            "properties": {
                "config": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workerPoolId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "config",
                "description",
                "name",
                "workerPoolId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the spacelift package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "apiKeyEndpoint": {
                "type": "string",
                "description": "Endpoint to use when authenticating with an API key outside of Spacelift\n",
                "defaultInfo": {
                    "environment": [
                        "SPACELIFT_API_KEY_ENDPOINT"
                    ]
                }
            },
            "apiKeyId": {
                "type": "string",
                "description": "ID of the API key to use when executing outside of Spacelift\n",
                "defaultInfo": {
                    "environment": [
                        "SPACELIFT_API_KEY_ID"
                    ]
                }
            },
            "apiKeySecret": {
                "type": "string",
                "description": "API key secret to use when executing outside of Spacelift\n",
                "defaultInfo": {
                    "environment": [
                        "SPACELIFT_API_KEY_SECRET"
                    ]
                },
                "secret": true
            },
            "apiToken": {
                "type": "string",
                "description": "Spacelift token generated by a run, only useful from within Spacelift\n",
                "defaultInfo": {
                    "environment": [
                        "SPACELIFT_API_TOKEN"
                    ]
                },
                "secret": true
            }
        }
    },
    "resources": {
        "spacelift:index/awsRole:AwsRole": {
            "properties": {
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module which assumes the AWS IAM role\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "ARN of the AWS IAM role to attach\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack which assumes the AWS IAM role\n"
                }
            },
            "required": [
                "roleArn"
            ],
            "inputProperties": {
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module which assumes the AWS IAM role\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "ARN of the AWS IAM role to attach\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack which assumes the AWS IAM role\n"
                }
            },
            "requiredInputs": [
                "roleArn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsRole resources.\n",
                "properties": {
                    "moduleId": {
                        "type": "string",
                        "description": "ID of the module which assumes the AWS IAM role\n"
                    },
                    "roleArn": {
                        "type": "string",
                        "description": "ARN of the AWS IAM role to attach\n"
                    },
                    "stackId": {
                        "type": "string",
                        "description": "ID of the stack which assumes the AWS IAM role\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/context:Context": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Free-form context description for users\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the context - should be unique in one account\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Free-form context description for users\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the context - should be unique in one account\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Context resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Free-form context description for users\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the context - should be unique in one account\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/contextAttachment:ContextAttachment": {
            "properties": {
                "contextId": {
                    "type": "string",
                    "description": "ID of the context to attach\n"
                },
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module to attach the context to\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the context attachment, used in case of conflicts\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack to attach the context to\n"
                }
            },
            "required": [
                "contextId"
            ],
            "inputProperties": {
                "contextId": {
                    "type": "string",
                    "description": "ID of the context to attach\n"
                },
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module to attach the context to\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the context attachment, used in case of conflicts\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack to attach the context to\n"
                }
            },
            "requiredInputs": [
                "contextId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContextAttachment resources.\n",
                "properties": {
                    "contextId": {
                        "type": "string",
                        "description": "ID of the context to attach\n"
                    },
                    "moduleId": {
                        "type": "string",
                        "description": "ID of the module to attach the context to\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the context attachment, used in case of conflicts\n"
                    },
                    "stackId": {
                        "type": "string",
                        "description": "ID of the stack to attach the context to\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/environmentVariable:EnvironmentVariable": {
            "properties": {
                "checksum": {
                    "type": "string",
                    "description": "SHA-256 checksum of the value\n"
                },
                "contextId": {
                    "type": "string",
                    "description": "ID of the context on which the environment variable is defined\n"
                },
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module on which the environment variable is defined\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the environment variable\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack on which the environment variable is defined\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the environment variable\n"
                },
                "writeOnly": {
                    "type": "boolean",
                    "description": "Indicates whether the value can be read back outside a Run\n"
                }
            },
            "required": [
                "checksum",
                "name",
                "value"
            ],
            "inputProperties": {
                "contextId": {
                    "type": "string",
                    "description": "ID of the context on which the environment variable is defined\n"
                },
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module on which the environment variable is defined\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the environment variable\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack on which the environment variable is defined\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the environment variable\n"
                },
                "writeOnly": {
                    "type": "boolean",
                    "description": "Indicates whether the value can be read back outside a Run\n"
                }
            },
            "requiredInputs": [
                "name",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EnvironmentVariable resources.\n",
                "properties": {
                    "checksum": {
                        "type": "string",
                        "description": "SHA-256 checksum of the value\n"
                    },
                    "contextId": {
                        "type": "string",
                        "description": "ID of the context on which the environment variable is defined\n"
                    },
                    "moduleId": {
                        "type": "string",
                        "description": "ID of the module on which the environment variable is defined\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the environment variable\n"
                    },
                    "stackId": {
                        "type": "string",
                        "description": "ID of the stack on which the environment variable is defined\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the environment variable\n"
                    },
                    "writeOnly": {
                        "type": "boolean",
                        "description": "Indicates whether the value can be read back outside a Run\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/gcpServiceAccount:GcpServiceAccount": {
            "properties": {
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module which uses GCP service account credentials\n"
                },
                "serviceAccountEmail": {
                    "type": "string",
                    "description": "Email address of the GCP service account dedicated for this stack\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack which uses GCP service account credentials\n"
                },
                "tokenScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes that will be requested when generating temporary GCP service account credentials\n"
                }
            },
            "required": [
                "serviceAccountEmail",
                "tokenScopes"
            ],
            "inputProperties": {
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module which uses GCP service account credentials\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack which uses GCP service account credentials\n"
                },
                "tokenScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes that will be requested when generating temporary GCP service account credentials\n"
                }
            },
            "requiredInputs": [
                "tokenScopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GcpServiceAccount resources.\n",
                "properties": {
                    "moduleId": {
                        "type": "string",
                        "description": "ID of the module which uses GCP service account credentials\n"
                    },
                    "serviceAccountEmail": {
                        "type": "string",
                        "description": "Email address of the GCP service account dedicated for this stack\n"
                    },
                    "stackId": {
                        "type": "string",
                        "description": "ID of the stack which uses GCP service account credentials\n"
                    },
                    "tokenScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of scopes that will be requested when generating temporary GCP service account credentials\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/module:Module": {
            "properties": {
                "administrative": {
                    "type": "boolean",
                    "description": "Indicates whether this module can manage others\n"
                },
                "awsAssumeRolePolicyStatement": {
                    "type": "string",
                    "description": "AWS IAM assume role policy statement setting up trust relationship\n"
                },
                "branch": {
                    "type": "string",
                    "description": "GitHub branch to apply changes to\n"
                },
                "description": {
                    "type": "string",
                    "description": "Free-form module description for users\n"
                },
                "gitlab": {
                    "$ref": "#/types/spacelift:index/ModuleGitlab:ModuleGitlab"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repository": {
                    "type": "string",
                    "description": "Name of the repository, without the owner part\n"
                },
                "sharedAccounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the accounts (subdomains) which should have access to the Module\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "ID of the worker pool to use\n"
                }
            },
            "required": [
                "awsAssumeRolePolicyStatement",
                "branch",
                "repository"
            ],
            "inputProperties": {
                "administrative": {
                    "type": "boolean",
                    "description": "Indicates whether this module can manage others\n"
                },
                "branch": {
                    "type": "string",
                    "description": "GitHub branch to apply changes to\n"
                },
                "description": {
                    "type": "string",
                    "description": "Free-form module description for users\n"
                },
                "gitlab": {
                    "$ref": "#/types/spacelift:index/ModuleGitlab:ModuleGitlab"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repository": {
                    "type": "string",
                    "description": "Name of the repository, without the owner part\n"
                },
                "sharedAccounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the accounts (subdomains) which should have access to the Module\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "ID of the worker pool to use\n"
                }
            },
            "requiredInputs": [
                "branch",
                "repository"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Module resources.\n",
                "properties": {
                    "administrative": {
                        "type": "boolean",
                        "description": "Indicates whether this module can manage others\n"
                    },
                    "awsAssumeRolePolicyStatement": {
                        "type": "string",
                        "description": "AWS IAM assume role policy statement setting up trust relationship\n"
                    },
                    "branch": {
                        "type": "string",
                        "description": "GitHub branch to apply changes to\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free-form module description for users\n"
                    },
                    "gitlab": {
                        "$ref": "#/types/spacelift:index/ModuleGitlab:ModuleGitlab"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repository": {
                        "type": "string",
                        "description": "Name of the repository, without the owner part\n"
                    },
                    "sharedAccounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the accounts (subdomains) which should have access to the Module\n"
                    },
                    "workerPoolId": {
                        "type": "string",
                        "description": "ID of the worker pool to use\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/mountedFile:MountedFile": {
            "properties": {
                "checksum": {
                    "type": "string",
                    "description": "SHA-256 checksum of the value\n"
                },
                "content": {
                    "type": "string",
                    "description": "Content of the mounted file encoded using Base-64\n"
                },
                "contextId": {
                    "type": "string",
                    "description": "ID of the context on which the mounted file is defined\n"
                },
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module on which the mounted file is defined\n"
                },
                "relativePath": {
                    "type": "string",
                    "description": "Relative path to the mounted file, without the /mnt/workspace/ prefix\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack on which the mounted file is defined\n"
                },
                "writeOnly": {
                    "type": "boolean",
                    "description": "Indicates whether the content can be read back outside a Run\n"
                }
            },
            "required": [
                "checksum",
                "content",
                "relativePath"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "Content of the mounted file encoded using Base-64\n"
                },
                "contextId": {
                    "type": "string",
                    "description": "ID of the context on which the mounted file is defined\n"
                },
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module on which the mounted file is defined\n"
                },
                "relativePath": {
                    "type": "string",
                    "description": "Relative path to the mounted file, without the /mnt/workspace/ prefix\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack on which the mounted file is defined\n"
                },
                "writeOnly": {
                    "type": "boolean",
                    "description": "Indicates whether the content can be read back outside a Run\n"
                }
            },
            "requiredInputs": [
                "content",
                "relativePath"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MountedFile resources.\n",
                "properties": {
                    "checksum": {
                        "type": "string",
                        "description": "SHA-256 checksum of the value\n"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content of the mounted file encoded using Base-64\n"
                    },
                    "contextId": {
                        "type": "string",
                        "description": "ID of the context on which the mounted file is defined\n"
                    },
                    "moduleId": {
                        "type": "string",
                        "description": "ID of the module on which the mounted file is defined\n"
                    },
                    "relativePath": {
                        "type": "string",
                        "description": "Relative path to the mounted file, without the /mnt/workspace/ prefix\n"
                    },
                    "stackId": {
                        "type": "string",
                        "description": "ID of the stack on which the mounted file is defined\n"
                    },
                    "writeOnly": {
                        "type": "boolean",
                        "description": "Indicates whether the content can be read back outside a Run\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/policy:Policy": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "Body of the policy\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy - should be unique in one account\n"
                },
                "type": {
                    "type": "string",
                    "description": "Body of the policy\n"
                }
            },
            "required": [
                "body",
                "name",
                "type"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "description": "Body of the policy\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy - should be unique in one account\n"
                },
                "type": {
                    "type": "string",
                    "description": "Body of the policy\n"
                }
            },
            "requiredInputs": [
                "body",
                "name",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Policy resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "Body of the policy\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy - should be unique in one account\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Body of the policy\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/policyAttachment:PolicyAttachment": {
            "properties": {
                "customInput": {
                    "type": "string",
                    "description": "JSON-encoded custom input to be passed to the evaluated document at the \"attachment\" key\n"
                },
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module to attach the policy to\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the policy to attach\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack to attach the policy to\n"
                }
            },
            "required": [
                "policyId"
            ],
            "inputProperties": {
                "customInput": {
                    "type": "string",
                    "description": "JSON-encoded custom input to be passed to the evaluated document at the \"attachment\" key\n"
                },
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module to attach the policy to\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "ID of the policy to attach\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack to attach the policy to\n"
                }
            },
            "requiredInputs": [
                "policyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyAttachment resources.\n",
                "properties": {
                    "customInput": {
                        "type": "string",
                        "description": "JSON-encoded custom input to be passed to the evaluated document at the \"attachment\" key\n"
                    },
                    "moduleId": {
                        "type": "string",
                        "description": "ID of the module to attach the policy to\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "ID of the policy to attach\n"
                    },
                    "stackId": {
                        "type": "string",
                        "description": "ID of the stack to attach the policy to\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/stack:Stack": {
            "properties": {
                "administrative": {
                    "type": "boolean",
                    "description": "Indicates whether this stack can manage others\n"
                },
                "autodeploy": {
                    "type": "boolean",
                    "description": "Indicates whether changes to this stack can be automatically deployed\n"
                },
                "autoretry": {
                    "type": "boolean",
                    "description": "Indicates whether obsolete proposed changes should automatically be retried\n"
                },
                "awsAssumeRolePolicyStatement": {
                    "type": "string",
                    "description": "AWS IAM assume role policy statement setting up trust relationship\n"
                },
                "beforeInits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of before-init scripts\n"
                },
                "branch": {
                    "type": "string",
                    "description": "GitHub branch to apply changes to\n"
                },
                "cloudformation": {
                    "$ref": "#/types/spacelift:index/StackCloudformation:StackCloudformation",
                    "description": "CloudFormation-specific configuration. Presence means this Stack is a CloudFormation Stack.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Free-form stack description for users\n"
                },
                "gitlab": {
                    "$ref": "#/types/spacelift:index/StackGitlab:StackGitlab"
                },
                "importState": {
                    "type": "string",
                    "description": "State file to upload when creating a new stack\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manageState": {
                    "type": "boolean",
                    "description": "Determines if Spacelift should manage state for this stack\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the stack - should be unique in one account\n"
                },
                "projectRoot": {
                    "type": "string",
                    "description": "Project root is the optional directory relative to the workspace root containing the entrypoint to the Stack.\n"
                },
                "pulumi": {
                    "$ref": "#/types/spacelift:index/StackPulumi:StackPulumi",
                    "description": "Pulumi-specific configuration. Presence means this Stack is a Pulumi Stack.\n"
                },
                "repository": {
                    "type": "string",
                    "description": "Name of the repository, without the owner part\n"
                },
                "runnerImage": {
                    "type": "string",
                    "description": "Name of the Docker image used to process Runs\n"
                },
                "terraformVersion": {
                    "type": "string",
                    "description": "Terraform version to use\n"
                },
                "terraformWorkspace": {
                    "type": "string",
                    "description": "Terraform workspace to select\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "ID of the worker pool to use\n"
                }
            },
            "required": [
                "awsAssumeRolePolicyStatement",
                "branch",
                "name",
                "repository"
            ],
            "inputProperties": {
                "administrative": {
                    "type": "boolean",
                    "description": "Indicates whether this stack can manage others\n"
                },
                "autodeploy": {
                    "type": "boolean",
                    "description": "Indicates whether changes to this stack can be automatically deployed\n"
                },
                "autoretry": {
                    "type": "boolean",
                    "description": "Indicates whether obsolete proposed changes should automatically be retried\n"
                },
                "beforeInits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of before-init scripts\n"
                },
                "branch": {
                    "type": "string",
                    "description": "GitHub branch to apply changes to\n"
                },
                "cloudformation": {
                    "$ref": "#/types/spacelift:index/StackCloudformation:StackCloudformation",
                    "description": "CloudFormation-specific configuration. Presence means this Stack is a CloudFormation Stack.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Free-form stack description for users\n"
                },
                "gitlab": {
                    "$ref": "#/types/spacelift:index/StackGitlab:StackGitlab"
                },
                "importState": {
                    "type": "string",
                    "description": "State file to upload when creating a new stack\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manageState": {
                    "type": "boolean",
                    "description": "Determines if Spacelift should manage state for this stack\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the stack - should be unique in one account\n"
                },
                "projectRoot": {
                    "type": "string",
                    "description": "Project root is the optional directory relative to the workspace root containing the entrypoint to the Stack.\n"
                },
                "pulumi": {
                    "$ref": "#/types/spacelift:index/StackPulumi:StackPulumi",
                    "description": "Pulumi-specific configuration. Presence means this Stack is a Pulumi Stack.\n"
                },
                "repository": {
                    "type": "string",
                    "description": "Name of the repository, without the owner part\n"
                },
                "runnerImage": {
                    "type": "string",
                    "description": "Name of the Docker image used to process Runs\n"
                },
                "terraformVersion": {
                    "type": "string",
                    "description": "Terraform version to use\n"
                },
                "terraformWorkspace": {
                    "type": "string",
                    "description": "Terraform workspace to select\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "ID of the worker pool to use\n"
                }
            },
            "requiredInputs": [
                "branch",
                "name",
                "repository"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Stack resources.\n",
                "properties": {
                    "administrative": {
                        "type": "boolean",
                        "description": "Indicates whether this stack can manage others\n"
                    },
                    "autodeploy": {
                        "type": "boolean",
                        "description": "Indicates whether changes to this stack can be automatically deployed\n"
                    },
                    "autoretry": {
                        "type": "boolean",
                        "description": "Indicates whether obsolete proposed changes should automatically be retried\n"
                    },
                    "awsAssumeRolePolicyStatement": {
                        "type": "string",
                        "description": "AWS IAM assume role policy statement setting up trust relationship\n"
                    },
                    "beforeInits": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of before-init scripts\n"
                    },
                    "branch": {
                        "type": "string",
                        "description": "GitHub branch to apply changes to\n"
                    },
                    "cloudformation": {
                        "$ref": "#/types/spacelift:index/StackCloudformation:StackCloudformation",
                        "description": "CloudFormation-specific configuration. Presence means this Stack is a CloudFormation Stack.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free-form stack description for users\n"
                    },
                    "gitlab": {
                        "$ref": "#/types/spacelift:index/StackGitlab:StackGitlab"
                    },
                    "importState": {
                        "type": "string",
                        "description": "State file to upload when creating a new stack\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "manageState": {
                        "type": "boolean",
                        "description": "Determines if Spacelift should manage state for this stack\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the stack - should be unique in one account\n"
                    },
                    "projectRoot": {
                        "type": "string",
                        "description": "Project root is the optional directory relative to the workspace root containing the entrypoint to the Stack.\n"
                    },
                    "pulumi": {
                        "$ref": "#/types/spacelift:index/StackPulumi:StackPulumi",
                        "description": "Pulumi-specific configuration. Presence means this Stack is a Pulumi Stack.\n"
                    },
                    "repository": {
                        "type": "string",
                        "description": "Name of the repository, without the owner part\n"
                    },
                    "runnerImage": {
                        "type": "string",
                        "description": "Name of the Docker image used to process Runs\n"
                    },
                    "terraformVersion": {
                        "type": "string",
                        "description": "Terraform version to use\n"
                    },
                    "terraformWorkspace": {
                        "type": "string",
                        "description": "Terraform workspace to select\n"
                    },
                    "workerPoolId": {
                        "type": "string",
                        "description": "ID of the worker pool to use\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/stackAwsRole:StackAwsRole": {
            "properties": {
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module which assumes the AWS IAM role\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "ARN of the AWS IAM role to attach\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack which assumes the AWS IAM role\n"
                }
            },
            "required": [
                "roleArn"
            ],
            "inputProperties": {
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module which assumes the AWS IAM role\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "ARN of the AWS IAM role to attach\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack which assumes the AWS IAM role\n"
                }
            },
            "requiredInputs": [
                "roleArn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StackAwsRole resources.\n",
                "properties": {
                    "moduleId": {
                        "type": "string",
                        "description": "ID of the module which assumes the AWS IAM role\n"
                    },
                    "roleArn": {
                        "type": "string",
                        "description": "ARN of the AWS IAM role to attach\n"
                    },
                    "stackId": {
                        "type": "string",
                        "description": "ID of the stack which assumes the AWS IAM role\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/stackGcpServiceAccount:StackGcpServiceAccount": {
            "properties": {
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module which uses GCP service account credentials\n"
                },
                "serviceAccountEmail": {
                    "type": "string",
                    "description": "Email address of the GCP service account dedicated for this stack\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack which uses GCP service account credentials\n"
                },
                "tokenScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes that will be requested when generating temporary GCP service account credentials\n"
                }
            },
            "required": [
                "serviceAccountEmail",
                "tokenScopes"
            ],
            "inputProperties": {
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module which uses GCP service account credentials\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack which uses GCP service account credentials\n"
                },
                "tokenScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of scopes that will be requested when generating temporary GCP service account credentials\n"
                }
            },
            "requiredInputs": [
                "tokenScopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StackGcpServiceAccount resources.\n",
                "properties": {
                    "moduleId": {
                        "type": "string",
                        "description": "ID of the module which uses GCP service account credentials\n"
                    },
                    "serviceAccountEmail": {
                        "type": "string",
                        "description": "Email address of the GCP service account dedicated for this stack\n"
                    },
                    "stackId": {
                        "type": "string",
                        "description": "ID of the stack which uses GCP service account credentials\n"
                    },
                    "tokenScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of scopes that will be requested when generating temporary GCP service account credentials\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/webhook:Webhook": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "enables or disables sending webhooks\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "endpoint to send the POST request to\n"
                },
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module which triggers the webhooks\n"
                },
                "secret": {
                    "type": "string",
                    "description": "secret used to sign each POST request so you're able to verify that the request comes from us\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack which triggers the webhooks\n"
                }
            },
            "required": [
                "endpoint"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "enables or disables sending webhooks\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "endpoint to send the POST request to\n"
                },
                "moduleId": {
                    "type": "string",
                    "description": "ID of the module which triggers the webhooks\n"
                },
                "secret": {
                    "type": "string",
                    "description": "secret used to sign each POST request so you're able to verify that the request comes from us\n"
                },
                "stackId": {
                    "type": "string",
                    "description": "ID of the stack which triggers the webhooks\n"
                }
            },
            "requiredInputs": [
                "endpoint"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Webhook resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "enables or disables sending webhooks\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "endpoint to send the POST request to\n"
                    },
                    "moduleId": {
                        "type": "string",
                        "description": "ID of the module which triggers the webhooks\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "secret used to sign each POST request so you're able to verify that the request comes from us\n"
                    },
                    "stackId": {
                        "type": "string",
                        "description": "ID of the stack which triggers the webhooks\n"
                    }
                },
                "type": "object"
            }
        },
        "spacelift:index/workerPool:WorkerPool": {
            "properties": {
                "config": {
                    "type": "string",
                    "description": "credentials necessary to connect WorkerPool's workers to the control plane\n"
                },
                "csr": {
                    "type": "string",
                    "description": "certificate signing request in base64\n"
                },
                "description": {
                    "type": "string",
                    "description": "description of the worker pool\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the worker pool\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "private key in base64\n"
                }
            },
            "required": [
                "config",
                "csr",
                "name",
                "privateKey"
            ],
            "inputProperties": {
                "csr": {
                    "type": "string",
                    "description": "certificate signing request in base64\n"
                },
                "description": {
                    "type": "string",
                    "description": "description of the worker pool\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the worker pool\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkerPool resources.\n",
                "properties": {
                    "config": {
                        "type": "string",
                        "description": "credentials necessary to connect WorkerPool's workers to the control plane\n"
                    },
                    "csr": {
                        "type": "string",
                        "description": "certificate signing request in base64\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of the worker pool\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the worker pool\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "private key in base64\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "spacelift:index/getAwsRole:getAwsRole": {
            "inputs": {
                "description": "A collection of arguments for invoking getAwsRole.\n",
                "properties": {
                    "moduleId": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAwsRole.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "roleArn",
                    "id"
                ]
            }
        },
        "spacelift:index/getContext:getContext": {
            "inputs": {
                "description": "A collection of arguments for invoking getContext.\n",
                "properties": {
                    "contextId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contextId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContext.\n",
                "properties": {
                    "contextId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contextId",
                    "description",
                    "name",
                    "id"
                ]
            }
        },
        "spacelift:index/getContextAttachment:getContextAttachment": {
            "inputs": {
                "description": "A collection of arguments for invoking getContextAttachment.\n",
                "properties": {
                    "contextId": {
                        "type": "string"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contextId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContextAttachment.\n",
                "properties": {
                    "contextId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contextId",
                    "priority",
                    "id"
                ]
            }
        },
        "spacelift:index/getCurrentStack:getCurrentStack": {
            "outputs": {
                "description": "A collection of values returned by getCurrentStack.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "spacelift:index/getEnvironmentVariable:getEnvironmentVariable": {
            "inputs": {
                "description": "A collection of arguments for invoking getEnvironmentVariable.\n",
                "properties": {
                    "contextId": {
                        "type": "string"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEnvironmentVariable.\n",
                "properties": {
                    "checksum": {
                        "type": "string"
                    },
                    "contextId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "writeOnly": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "checksum",
                    "name",
                    "value",
                    "writeOnly",
                    "id"
                ]
            }
        },
        "spacelift:index/getGcpServiceAccount:getGcpServiceAccount": {
            "inputs": {
                "description": "A collection of arguments for invoking getGcpServiceAccount.\n",
                "properties": {
                    "moduleId": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGcpServiceAccount.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "serviceAccountEmail": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    },
                    "tokenScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "serviceAccountEmail",
                    "tokenScopes",
                    "id"
                ]
            }
        },
        "spacelift:index/getIps:getIps": {
            "outputs": {
                "description": "A collection of values returned by getIps.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "ips",
                    "id"
                ]
            }
        },
        "spacelift:index/getModule:getModule": {
            "inputs": {
                "description": "A collection of arguments for invoking getModule.\n",
                "properties": {
                    "moduleId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "moduleId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getModule.\n",
                "properties": {
                    "administrative": {
                        "type": "boolean"
                    },
                    "awsAssumeRolePolicyStatement": {
                        "type": "string"
                    },
                    "branch": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "gitlabs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spacelift:index/getModuleGitlab:getModuleGitlab"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "repository": {
                        "type": "string"
                    },
                    "sharedAccounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "workerPoolId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "administrative",
                    "awsAssumeRolePolicyStatement",
                    "branch",
                    "description",
                    "gitlabs",
                    "labels",
                    "moduleId",
                    "repository",
                    "sharedAccounts",
                    "workerPoolId",
                    "id"
                ]
            }
        },
        "spacelift:index/getMountedFile:getMountedFile": {
            "inputs": {
                "description": "A collection of arguments for invoking getMountedFile.\n",
                "properties": {
                    "contextId": {
                        "type": "string"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "relativePath": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "relativePath"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMountedFile.\n",
                "properties": {
                    "checksum": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "contextId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "relativePath": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    },
                    "writeOnly": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "checksum",
                    "content",
                    "relativePath",
                    "writeOnly",
                    "id"
                ]
            }
        },
        "spacelift:index/getPolicy:getPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicy.\n",
                "properties": {
                    "policyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "policyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicy.\n",
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "body",
                    "name",
                    "policyId",
                    "type",
                    "id"
                ]
            }
        },
        "spacelift:index/getStack:getStack": {
            "inputs": {
                "description": "A collection of arguments for invoking getStack.\n",
                "properties": {
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "stackId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStack.\n",
                "properties": {
                    "administrative": {
                        "type": "boolean"
                    },
                    "autodeploy": {
                        "type": "boolean"
                    },
                    "autoretry": {
                        "type": "boolean"
                    },
                    "awsAssumeRolePolicyStatement": {
                        "type": "string"
                    },
                    "beforeInits": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "branch": {
                        "type": "string"
                    },
                    "cloudformations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spacelift:index/getStackCloudformation:getStackCloudformation"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "gitlabs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spacelift:index/getStackGitlab:getStackGitlab"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "manageState": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "projectRoot": {
                        "type": "string"
                    },
                    "pulumis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spacelift:index/getStackPulumi:getStackPulumi"
                        }
                    },
                    "repository": {
                        "type": "string"
                    },
                    "runnerImage": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    },
                    "terraformVersion": {
                        "type": "string"
                    },
                    "terraformWorkspace": {
                        "type": "string"
                    },
                    "workerPoolId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "administrative",
                    "autodeploy",
                    "autoretry",
                    "awsAssumeRolePolicyStatement",
                    "beforeInits",
                    "branch",
                    "cloudformations",
                    "description",
                    "gitlabs",
                    "labels",
                    "manageState",
                    "name",
                    "projectRoot",
                    "pulumis",
                    "repository",
                    "runnerImage",
                    "stackId",
                    "terraformVersion",
                    "terraformWorkspace",
                    "workerPoolId",
                    "id"
                ]
            }
        },
        "spacelift:index/getStackAwsRole:getStackAwsRole": {
            "inputs": {
                "description": "A collection of arguments for invoking getStackAwsRole.\n",
                "properties": {
                    "moduleId": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getStackAwsRole.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "roleArn": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "roleArn",
                    "id"
                ]
            }
        },
        "spacelift:index/getStackGcpServiceAccount:getStackGcpServiceAccount": {
            "inputs": {
                "description": "A collection of arguments for invoking getStackGcpServiceAccount.\n",
                "properties": {
                    "moduleId": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getStackGcpServiceAccount.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "serviceAccountEmail": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    },
                    "tokenScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "serviceAccountEmail",
                    "tokenScopes",
                    "id"
                ]
            }
        },
        "spacelift:index/getWebhook:getWebhook": {
            "inputs": {
                "description": "A collection of arguments for invoking getWebhook.\n",
                "properties": {
                    "moduleId": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    },
                    "webhookId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "webhookId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getWebhook.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "stackId": {
                        "type": "string"
                    },
                    "webhookId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "endpoint",
                    "secret",
                    "webhookId",
                    "id"
                ]
            }
        },
        "spacelift:index/getWorkerPool:getWorkerPool": {
            "inputs": {
                "description": "A collection of arguments for invoking getWorkerPool.\n",
                "properties": {
                    "workerPoolId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "workerPoolId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getWorkerPool.\n",
                "properties": {
                    "config": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workerPoolId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "config",
                    "description",
                    "name",
                    "workerPoolId",
                    "id"
                ]
            }
        },
        "spacelift:index/getWorkerPools:getWorkerPools": {
            "outputs": {
                "description": "A collection of values returned by getWorkerPools.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "workerPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spacelift:index/getWorkerPoolsWorkerPool:getWorkerPoolsWorkerPool"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "workerPools",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "namespaces": {
                "index": "index",
                "spacelift": "Spacelift"
            },
            "packageReferences": {
                "Pulumi": "2.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/spacelift-io/spacelift-spacelift/sdk/go/spacelift"
        },
        "nodejs": {
            "dependencies": {
                "@pulumi/pulumi": "^2.15.0"
            },
            "devDependencies": {
                "@types/node": "^8.0.25"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Spacelift resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/spacelift-io/terraform-provider-spacelift)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-spacelift` repo](https://github.com/pulumi/pulumi-spacelift/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`spacelift-io/terraform-provider-spacelift` repo](https://github.com/spacelift-io/terraform-provider-spacelift/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/spacelift-io/terraform-provider-spacelift)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-spacelift` repo](https://github.com/pulumi/pulumi-spacelift/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`spacelift-io/terraform-provider-spacelift` repo](https://github.com/spacelift-io/terraform-provider-spacelift/issues).",
            "requires": {
                "pulumi": "\u003e=2.15.0,\u003c3.0.0"
            }
        }
    }
}