// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    public static class GetModule
    {
        public static Task<GetModuleResult> InvokeAsync(GetModuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetModuleResult>("spacelift:index/getModule:getModule", args ?? new GetModuleArgs(), options.WithVersion());
    }


    public sealed class GetModuleArgs : Pulumi.InvokeArgs
    {
        [Input("moduleId", required: true)]
        public string ModuleId { get; set; } = null!;

        public GetModuleArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetModuleResult
    {
        public readonly bool Administrative;
        public readonly string AwsAssumeRolePolicyStatement;
        public readonly ImmutableArray<Outputs.GetModuleAzureDevopResult> AzureDevops;
        public readonly ImmutableArray<Outputs.GetModuleBitbucketCloudResult> BitbucketClouds;
        public readonly ImmutableArray<Outputs.GetModuleBitbucketDatacenterResult> BitbucketDatacenters;
        public readonly string Branch;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetModuleGithubEnterpriseResult> GithubEnterprises;
        public readonly ImmutableArray<Outputs.GetModuleGitlabResult> Gitlabs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Labels;
        public readonly string ModuleId;
        public readonly string Name;
        public readonly string ProjectRoot;
        public readonly bool ProtectFromDeletion;
        public readonly string Repository;
        public readonly ImmutableArray<string> SharedAccounts;
        public readonly string TerraformProvider;
        public readonly string WorkerPoolId;

        [OutputConstructor]
        private GetModuleResult(
            bool administrative,

            string awsAssumeRolePolicyStatement,

            ImmutableArray<Outputs.GetModuleAzureDevopResult> azureDevops,

            ImmutableArray<Outputs.GetModuleBitbucketCloudResult> bitbucketClouds,

            ImmutableArray<Outputs.GetModuleBitbucketDatacenterResult> bitbucketDatacenters,

            string branch,

            string description,

            ImmutableArray<Outputs.GetModuleGithubEnterpriseResult> githubEnterprises,

            ImmutableArray<Outputs.GetModuleGitlabResult> gitlabs,

            string id,

            ImmutableArray<string> labels,

            string moduleId,

            string name,

            string projectRoot,

            bool protectFromDeletion,

            string repository,

            ImmutableArray<string> sharedAccounts,

            string terraformProvider,

            string workerPoolId)
        {
            Administrative = administrative;
            AwsAssumeRolePolicyStatement = awsAssumeRolePolicyStatement;
            AzureDevops = azureDevops;
            BitbucketClouds = bitbucketClouds;
            BitbucketDatacenters = bitbucketDatacenters;
            Branch = branch;
            Description = description;
            GithubEnterprises = githubEnterprises;
            Gitlabs = gitlabs;
            Id = id;
            Labels = labels;
            ModuleId = moduleId;
            Name = name;
            ProjectRoot = projectRoot;
            ProtectFromDeletion = protectFromDeletion;
            Repository = repository;
            SharedAccounts = sharedAccounts;
            TerraformProvider = terraformProvider;
            WorkerPoolId = workerPoolId;
        }
    }
}
