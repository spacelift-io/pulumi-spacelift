// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    public static class GetContext
    {
        /// <summary>
        /// `spacelift.Context` represents a Spacelift **context** - a collection of configuration elements (either environment variables or mounted files) that can be administratively attached to multiple stacks (`spacelift.Stack`) or modules (`spacelift.Module`) using a context attachment (`spacelift.ContextAttachment`)`
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var prod_k8s_ie = Output.Create(Spacelift.GetContext.InvokeAsync(new Spacelift.GetContextArgs
        ///         {
        ///             ContextId = "prod-k8s-ie",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// &lt;!-- schema generated by tfplugindocs --&gt;
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Schema
        /// 
        /// ### Required
        /// 
        /// - **context_id** (String) immutable ID (slug) of the context
        /// 
        /// ### Optional
        /// 
        /// - **id** (String) The ID of this resource.
        /// 
        /// ### Read-Only
        /// 
        /// - **description** (String) free-form context description for users
        /// - **labels** (Set of String)
        /// - **name** (String) name of the context
        /// </summary>
        public static Task<GetContextResult> InvokeAsync(GetContextArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetContextResult>("spacelift:index/getContext:getContext", args ?? new GetContextArgs(), options.WithVersion());
    }


    public sealed class GetContextArgs : Pulumi.InvokeArgs
    {
        [Input("contextId", required: true)]
        public string ContextId { get; set; } = null!;

        public GetContextArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetContextResult
    {
        public readonly string ContextId;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Labels;
        public readonly string Name;

        [OutputConstructor]
        private GetContextResult(
            string contextId,

            string description,

            string id,

            ImmutableArray<string> labels,

            string name)
        {
            ContextId = contextId;
            Description = description;
            Id = id;
            Labels = labels;
            Name = name;
        }
    }
}
