// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    public static class GetWebhook
    {
        /// <summary>
        /// `spacelift.Webook` represents a webhook endpoint to which Spacelift sends the POST request about run state changes.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var webhook = Output.Create(Spacelift.GetWebhook.InvokeAsync(new Spacelift.GetWebhookArgs
        ///         {
        ///             WebhookId = spacelift_webhook.Webhook.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetWebhookResult> InvokeAsync(GetWebhookArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWebhookResult>("spacelift:index/getWebhook:getWebhook", args ?? new GetWebhookArgs(), options.WithDefaults());

        /// <summary>
        /// `spacelift.Webook` represents a webhook endpoint to which Spacelift sends the POST request about run state changes.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var webhook = Output.Create(Spacelift.GetWebhook.InvokeAsync(new Spacelift.GetWebhookArgs
        ///         {
        ///             WebhookId = spacelift_webhook.Webhook.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetWebhookResult> Invoke(GetWebhookInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWebhookResult>("spacelift:index/getWebhook:getWebhook", args ?? new GetWebhookInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebhookArgs : Pulumi.InvokeArgs
    {
        [Input("moduleId")]
        public string? ModuleId { get; set; }

        [Input("stackId")]
        public string? StackId { get; set; }

        [Input("webhookId", required: true)]
        public string WebhookId { get; set; } = null!;

        public GetWebhookArgs()
        {
        }
    }

    public sealed class GetWebhookInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("moduleId")]
        public Input<string>? ModuleId { get; set; }

        [Input("stackId")]
        public Input<string>? StackId { get; set; }

        [Input("webhookId", required: true)]
        public Input<string> WebhookId { get; set; } = null!;

        public GetWebhookInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWebhookResult
    {
        public readonly bool Enabled;
        public readonly string Endpoint;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ModuleId;
        public readonly string Secret;
        public readonly string? StackId;
        public readonly string WebhookId;

        [OutputConstructor]
        private GetWebhookResult(
            bool enabled,

            string endpoint,

            string id,

            string? moduleId,

            string secret,

            string? stackId,

            string webhookId)
        {
            Enabled = enabled;
            Endpoint = endpoint;
            Id = id;
            ModuleId = moduleId;
            Secret = secret;
            StackId = stackId;
            WebhookId = webhookId;
        }
    }
}
