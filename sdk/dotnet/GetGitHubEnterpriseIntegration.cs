// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    public static class GetGitHubEnterpriseIntegration
    {
        /// <summary>
        /// `spacelift.getGitHubEnterpriseIntegration` returns details about Github Enterprise integration
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var githubEnterpriseIntegration = Output.Create(Spacelift.GetGitHubEnterpriseIntegration.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// &lt;!-- schema generated by tfplugindocs --&gt;
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Schema
        /// 
        /// ### Optional
        /// 
        /// - **id** (String) The ID of this resource.
        /// 
        /// ### Read-Only
        /// 
        /// - **api_host** (String) Github integration api host
        /// - **app_id** (String) Github integration app id
        /// - **webhook_secret** (String) Github integration webhook secret
        /// </summary>
        public static Task<GetGitHubEnterpriseIntegrationResult> InvokeAsync(InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGitHubEnterpriseIntegrationResult>("spacelift:index/getGitHubEnterpriseIntegration:getGitHubEnterpriseIntegration", InvokeArgs.Empty, options.WithVersion());
    }


    [OutputType]
    public sealed class GetGitHubEnterpriseIntegrationResult
    {
        public readonly string ApiHost;
        public readonly string AppId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string WebhookSecret;

        [OutputConstructor]
        private GetGitHubEnterpriseIntegrationResult(
            string apiHost,

            string appId,

            string id,

            string webhookSecret)
        {
            ApiHost = apiHost;
            AppId = appId;
            Id = id;
            WebhookSecret = webhookSecret;
        }
    }
}
