// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    public static class GetWorkerPool
    {
        /// <summary>
        /// `spacelift.WorkerPool` represents a worker pool assigned to the Spacelift account.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var k8s_core = Output.Create(Spacelift.GetWorkerPool.InvokeAsync(new Spacelift.GetWorkerPoolArgs
        ///         {
        ///             WorkerPoolId = "k8s-core",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetWorkerPoolResult> InvokeAsync(GetWorkerPoolArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkerPoolResult>("spacelift:index/getWorkerPool:getWorkerPool", args ?? new GetWorkerPoolArgs(), options.WithDefaults());

        /// <summary>
        /// `spacelift.WorkerPool` represents a worker pool assigned to the Spacelift account.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var k8s_core = Output.Create(Spacelift.GetWorkerPool.InvokeAsync(new Spacelift.GetWorkerPoolArgs
        ///         {
        ///             WorkerPoolId = "k8s-core",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetWorkerPoolResult> Invoke(GetWorkerPoolInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWorkerPoolResult>("spacelift:index/getWorkerPool:getWorkerPool", args ?? new GetWorkerPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkerPoolArgs : Pulumi.InvokeArgs
    {
        [Input("workerPoolId", required: true)]
        public string WorkerPoolId { get; set; } = null!;

        public GetWorkerPoolArgs()
        {
        }
    }

    public sealed class GetWorkerPoolInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("workerPoolId", required: true)]
        public Input<string> WorkerPoolId { get; set; } = null!;

        public GetWorkerPoolInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWorkerPoolResult
    {
        public readonly string Config;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Labels;
        public readonly string Name;
        public readonly string SpaceId;
        public readonly string WorkerPoolId;

        [OutputConstructor]
        private GetWorkerPoolResult(
            string config,

            string description,

            string id,

            ImmutableArray<string> labels,

            string name,

            string spaceId,

            string workerPoolId)
        {
            Config = config;
            Description = description;
            Id = id;
            Labels = labels;
            Name = name;
            SpaceId = spaceId;
            WorkerPoolId = workerPoolId;
        }
    }
}
