// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    /// <summary>
    /// `spacelift.VCSAgentPool` represents a Spacelift **VCS agent pool** - a logical group of proxies allowing Spacelift to access private VCS installations
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Spacelift = Pulumi.Spacelift;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var ghe = new Spacelift.VCSAgentPool("ghe", new Spacelift.VCSAgentPoolArgs
    ///         {
    ///             Description = "VCS agent pool for our internal GitHub Enterpris",
    ///             Name = "ghe",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// &lt;!-- schema generated by tfplugindocs --&gt;
    /// ## Schema
    /// 
    /// ### Required
    /// 
    /// - **name** (String) Name of the VCS agent pool, must be unique within an account
    /// 
    /// ### Optional
    /// 
    /// - **description** (String) Free-form VCS agent pool description for users
    /// - **id** (String) The ID of this resource.
    /// 
    /// ### Read-Only
    /// 
    /// - **config** (String, Sensitive) VCS agent pool configuration, encoded using base64
    /// 
    /// ## Import
    /// 
    /// Import is supported using the following syntax
    /// 
    /// ```sh
    ///  $ pulumi import spacelift:index/vCSAgentPool:VCSAgentPool ghe $VCS_AGENT_POOL_ID
    /// ```
    /// </summary>
    [SpaceliftResourceType("spacelift:index/vCSAgentPool:VCSAgentPool")]
    public partial class VCSAgentPool : Pulumi.CustomResource
    {
        /// <summary>
        /// VCS agent pool configuration, encoded using base64
        /// </summary>
        [Output("config")]
        public Output<string> Config { get; private set; } = null!;

        /// <summary>
        /// Free-form VCS agent pool description for users
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name of the VCS agent pool, must be unique within an account
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a VCSAgentPool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VCSAgentPool(string name, VCSAgentPoolArgs args, CustomResourceOptions? options = null)
            : base("spacelift:index/vCSAgentPool:VCSAgentPool", name, args ?? new VCSAgentPoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VCSAgentPool(string name, Input<string> id, VCSAgentPoolState? state = null, CustomResourceOptions? options = null)
            : base("spacelift:index/vCSAgentPool:VCSAgentPool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VCSAgentPool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VCSAgentPool Get(string name, Input<string> id, VCSAgentPoolState? state = null, CustomResourceOptions? options = null)
        {
            return new VCSAgentPool(name, id, state, options);
        }
    }

    public sealed class VCSAgentPoolArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Free-form VCS agent pool description for users
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the VCS agent pool, must be unique within an account
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public VCSAgentPoolArgs()
        {
        }
    }

    public sealed class VCSAgentPoolState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// VCS agent pool configuration, encoded using base64
        /// </summary>
        [Input("config")]
        public Input<string>? Config { get; set; }

        /// <summary>
        /// Free-form VCS agent pool description for users
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the VCS agent pool, must be unique within an account
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public VCSAgentPoolState()
        {
        }
    }
}
