// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    public static class GetAzureIntegrationAttachment
    {
        /// <summary>
        /// `spacelift.AzureIntegrationAttachment` represents the attachment between a reusable Azure integration and a single stack or module.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Spacelift.GetAzureIntegrationAttachment.InvokeAsync(new Spacelift.GetAzureIntegrationAttachmentArgs
        ///         {
        ///             IntegrationId = "some-integration-id",
        ///             StackId = "some-stack-id",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAzureIntegrationAttachmentResult> InvokeAsync(GetAzureIntegrationAttachmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAzureIntegrationAttachmentResult>("spacelift:index/getAzureIntegrationAttachment:getAzureIntegrationAttachment", args ?? new GetAzureIntegrationAttachmentArgs(), options.WithDefaults());

        /// <summary>
        /// `spacelift.AzureIntegrationAttachment` represents the attachment between a reusable Azure integration and a single stack or module.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Spacelift.GetAzureIntegrationAttachment.InvokeAsync(new Spacelift.GetAzureIntegrationAttachmentArgs
        ///         {
        ///             IntegrationId = "some-integration-id",
        ///             StackId = "some-stack-id",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAzureIntegrationAttachmentResult> Invoke(GetAzureIntegrationAttachmentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAzureIntegrationAttachmentResult>("spacelift:index/getAzureIntegrationAttachment:getAzureIntegrationAttachment", args ?? new GetAzureIntegrationAttachmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzureIntegrationAttachmentArgs : Pulumi.InvokeArgs
    {
        [Input("integrationId", required: true)]
        public string IntegrationId { get; set; } = null!;

        [Input("moduleId")]
        public string? ModuleId { get; set; }

        [Input("stackId")]
        public string? StackId { get; set; }

        public GetAzureIntegrationAttachmentArgs()
        {
        }
    }

    public sealed class GetAzureIntegrationAttachmentInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("integrationId", required: true)]
        public Input<string> IntegrationId { get; set; } = null!;

        [Input("moduleId")]
        public Input<string>? ModuleId { get; set; }

        [Input("stackId")]
        public Input<string>? StackId { get; set; }

        public GetAzureIntegrationAttachmentInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAzureIntegrationAttachmentResult
    {
        public readonly string AttachmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IntegrationId;
        public readonly string? ModuleId;
        public readonly bool Read;
        public readonly string? StackId;
        public readonly string SubscriptionId;
        public readonly bool Write;

        [OutputConstructor]
        private GetAzureIntegrationAttachmentResult(
            string attachmentId,

            string id,

            string integrationId,

            string? moduleId,

            bool read,

            string? stackId,

            string subscriptionId,

            bool write)
        {
            AttachmentId = attachmentId;
            Id = id;
            IntegrationId = integrationId;
            ModuleId = moduleId;
            Read = read;
            StackId = stackId;
            SubscriptionId = subscriptionId;
            Write = write;
        }
    }
}
