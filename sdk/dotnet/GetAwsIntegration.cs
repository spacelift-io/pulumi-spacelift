// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    public static class GetAwsIntegration
    {
        /// <summary>
        /// `spacelift.AwsIntegration` represents an integration with an AWS account. This integration is account-level and needs to be explicitly attached to individual stacks in order to take effect.
        /// 
        /// Note: when assuming credentials for **shared workers**, Spacelift will use `$accountName-$integrationID@$stackID-suffix` or `$accountName-$integrationID@$moduleID-$suffix` as [external ID](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html) and `$runID@$stackID@$accountName` truncated to 64 characters as [session ID](https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole),$suffix will be `read` or `write`.
        /// </summary>
        public static Task<GetAwsIntegrationResult> InvokeAsync(GetAwsIntegrationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAwsIntegrationResult>("spacelift:index/getAwsIntegration:getAwsIntegration", args ?? new GetAwsIntegrationArgs(), options.WithDefaults());

        /// <summary>
        /// `spacelift.AwsIntegration` represents an integration with an AWS account. This integration is account-level and needs to be explicitly attached to individual stacks in order to take effect.
        /// 
        /// Note: when assuming credentials for **shared workers**, Spacelift will use `$accountName-$integrationID@$stackID-suffix` or `$accountName-$integrationID@$moduleID-$suffix` as [external ID](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html) and `$runID@$stackID@$accountName` truncated to 64 characters as [session ID](https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole),$suffix will be `read` or `write`.
        /// </summary>
        public static Output<GetAwsIntegrationResult> Invoke(GetAwsIntegrationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAwsIntegrationResult>("spacelift:index/getAwsIntegration:getAwsIntegration", args ?? new GetAwsIntegrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAwsIntegrationArgs : Pulumi.InvokeArgs
    {
        [Input("integrationId", required: true)]
        public string IntegrationId { get; set; } = null!;

        public GetAwsIntegrationArgs()
        {
        }
    }

    public sealed class GetAwsIntegrationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("integrationId", required: true)]
        public Input<string> IntegrationId { get; set; } = null!;

        public GetAwsIntegrationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAwsIntegrationResult
    {
        public readonly int DurationSeconds;
        public readonly string ExternalId;
        public readonly bool GenerateCredentialsInWorker;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IntegrationId;
        public readonly ImmutableArray<string> Labels;
        public readonly string Name;
        public readonly string RoleArn;
        public readonly string SpaceId;

        [OutputConstructor]
        private GetAwsIntegrationResult(
            int durationSeconds,

            string externalId,

            bool generateCredentialsInWorker,

            string id,

            string integrationId,

            ImmutableArray<string> labels,

            string name,

            string roleArn,

            string spaceId)
        {
            DurationSeconds = durationSeconds;
            ExternalId = externalId;
            GenerateCredentialsInWorker = generateCredentialsInWorker;
            Id = id;
            IntegrationId = integrationId;
            Labels = labels;
            Name = name;
            RoleArn = roleArn;
            SpaceId = spaceId;
        }
    }
}
