// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    public static class GetGitlabIntegration
    {
        /// <summary>
        /// `spacelift.getGitlabIntegration` returns details about Gitlab integration
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var gitlabIntegration = Output.Create(Spacelift.GetGitlabIntegration.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGitlabIntegrationResult> InvokeAsync(InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGitlabIntegrationResult>("spacelift:index/getGitlabIntegration:getGitlabIntegration", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetGitlabIntegrationResult
    {
        public readonly string ApiHost;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string WebhookSecret;

        [OutputConstructor]
        private GetGitlabIntegrationResult(
            string apiHost,

            string id,

            string webhookSecret)
        {
            ApiHost = apiHost;
            Id = id;
            WebhookSecret = webhookSecret;
        }
    }
}
