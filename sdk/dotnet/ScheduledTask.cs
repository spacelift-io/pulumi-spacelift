// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    /// <summary>
    /// `spacelift.ScheduledTask` represents a scheduling configuration for a Stack. It will trigger task on the given schedule or timestamp
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Spacelift = Pulumi.Spacelift;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var k8s_core = new Spacelift.Stack("k8s-core");
    /// 
    ///     // ...
    ///     // create the resources of a stack on a given schedule
    ///     var k8s_core_create = new Spacelift.ScheduledTask("k8s-core-create", new()
    ///     {
    ///         StackId = k8s_core.Id,
    ///         Command = "pulumi up -auto-approve",
    ///         Everies = new[]
    ///         {
    ///             "0 7 * * 1-5",
    ///         },
    ///         Timezone = "CET",
    ///     });
    /// 
    ///     // destroy the resources of a stack on a given schedule
    ///     var k8s_core_destroyScheduledTask = new Spacelift.ScheduledTask("k8s-core-destroyScheduledTask", new()
    ///     {
    ///         StackId = k8s_core.Id,
    ///         Command = "terraform destroy -auto-approve",
    ///         Everies = new[]
    ///         {
    ///             "0 21 * * 1-5",
    ///         },
    ///         Timezone = "CET",
    ///     });
    /// 
    ///     // at a given timestamp (unix)
    ///     var k8s_core_destroyIndex_scheduledTaskScheduledTask = new Spacelift.ScheduledTask("k8s-core-destroyIndex/scheduledTaskScheduledTask", new()
    ///     {
    ///         StackId = k8s_core.Id,
    ///         Command = "terraform destroy -auto-approve",
    ///         At = 1663336895,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import spacelift:index/scheduledTask:ScheduledTask ireland-kubeconfig $STACK_ID/$SCHEDULED_TASK_ID
    /// ```
    /// </summary>
    [SpaceliftResourceType("spacelift:index/scheduledTask:ScheduledTask")]
    public partial class ScheduledTask : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Timestamp (unix timestamp) at which time the scheduled task should happen.
        /// </summary>
        [Output("at")]
        public Output<int?> At { get; private set; } = null!;

        /// <summary>
        /// Command that will be run.
        /// </summary>
        [Output("command")]
        public Output<string> Command { get; private set; } = null!;

        /// <summary>
        /// List of cron schedule expressions based on which the scheduled task should be triggered.
        /// </summary>
        [Output("everies")]
        public Output<ImmutableArray<string>> Everies { get; private set; } = null!;

        /// <summary>
        /// ID of the schedule
        /// </summary>
        [Output("scheduleId")]
        public Output<string> ScheduleId { get; private set; } = null!;

        /// <summary>
        /// ID of the stack for which to set up the scheduled task
        /// </summary>
        [Output("stackId")]
        public Output<string> StackId { get; private set; } = null!;

        /// <summary>
        /// Timezone in which the schedule is expressed. Defaults to `UTC`.
        /// </summary>
        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;


        /// <summary>
        /// Create a ScheduledTask resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScheduledTask(string name, ScheduledTaskArgs args, CustomResourceOptions? options = null)
            : base("spacelift:index/scheduledTask:ScheduledTask", name, args ?? new ScheduledTaskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScheduledTask(string name, Input<string> id, ScheduledTaskState? state = null, CustomResourceOptions? options = null)
            : base("spacelift:index/scheduledTask:ScheduledTask", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://downloads.spacelift.io/pulumi-plugins",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScheduledTask resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScheduledTask Get(string name, Input<string> id, ScheduledTaskState? state = null, CustomResourceOptions? options = null)
        {
            return new ScheduledTask(name, id, state, options);
        }
    }

    public sealed class ScheduledTaskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Timestamp (unix timestamp) at which time the scheduled task should happen.
        /// </summary>
        [Input("at")]
        public Input<int>? At { get; set; }

        /// <summary>
        /// Command that will be run.
        /// </summary>
        [Input("command", required: true)]
        public Input<string> Command { get; set; } = null!;

        [Input("everies")]
        private InputList<string>? _everies;

        /// <summary>
        /// List of cron schedule expressions based on which the scheduled task should be triggered.
        /// </summary>
        public InputList<string> Everies
        {
            get => _everies ?? (_everies = new InputList<string>());
            set => _everies = value;
        }

        /// <summary>
        /// ID of the schedule
        /// </summary>
        [Input("scheduleId")]
        public Input<string>? ScheduleId { get; set; }

        /// <summary>
        /// ID of the stack for which to set up the scheduled task
        /// </summary>
        [Input("stackId", required: true)]
        public Input<string> StackId { get; set; } = null!;

        /// <summary>
        /// Timezone in which the schedule is expressed. Defaults to `UTC`.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public ScheduledTaskArgs()
        {
        }
        public static new ScheduledTaskArgs Empty => new ScheduledTaskArgs();
    }

    public sealed class ScheduledTaskState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Timestamp (unix timestamp) at which time the scheduled task should happen.
        /// </summary>
        [Input("at")]
        public Input<int>? At { get; set; }

        /// <summary>
        /// Command that will be run.
        /// </summary>
        [Input("command")]
        public Input<string>? Command { get; set; }

        [Input("everies")]
        private InputList<string>? _everies;

        /// <summary>
        /// List of cron schedule expressions based on which the scheduled task should be triggered.
        /// </summary>
        public InputList<string> Everies
        {
            get => _everies ?? (_everies = new InputList<string>());
            set => _everies = value;
        }

        /// <summary>
        /// ID of the schedule
        /// </summary>
        [Input("scheduleId")]
        public Input<string>? ScheduleId { get; set; }

        /// <summary>
        /// ID of the stack for which to set up the scheduled task
        /// </summary>
        [Input("stackId")]
        public Input<string>? StackId { get; set; }

        /// <summary>
        /// Timezone in which the schedule is expressed. Defaults to `UTC`.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public ScheduledTaskState()
        {
        }
        public static new ScheduledTaskState Empty => new ScheduledTaskState();
    }
}
