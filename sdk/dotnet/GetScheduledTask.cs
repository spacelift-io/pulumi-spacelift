// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Spacelift
{
    public static class GetScheduledTask
    {
        /// <summary>
        /// `spacelift.ScheduledTask` represents a scheduling configuration for a Stack. It will trigger a task on the given timestamp/schedule.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ireland_kubeconfig_destroy = Spacelift.GetScheduledTask.Invoke(new()
        ///     {
        ///         ScheduledTaskId = "$STACK_ID/$SCHEDULED_TASK_ID",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetScheduledTaskResult> InvokeAsync(GetScheduledTaskArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScheduledTaskResult>("spacelift:index/getScheduledTask:getScheduledTask", args ?? new GetScheduledTaskArgs(), options.WithDefaults());

        /// <summary>
        /// `spacelift.ScheduledTask` represents a scheduling configuration for a Stack. It will trigger a task on the given timestamp/schedule.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Spacelift = Pulumi.Spacelift;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ireland_kubeconfig_destroy = Spacelift.GetScheduledTask.Invoke(new()
        ///     {
        ///         ScheduledTaskId = "$STACK_ID/$SCHEDULED_TASK_ID",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetScheduledTaskResult> Invoke(GetScheduledTaskInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScheduledTaskResult>("spacelift:index/getScheduledTask:getScheduledTask", args ?? new GetScheduledTaskInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScheduledTaskArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the scheduled task (stack*id/schedule*id)
        /// </summary>
        [Input("scheduledTaskId", required: true)]
        public string ScheduledTaskId { get; set; } = null!;

        public GetScheduledTaskArgs()
        {
        }
        public static new GetScheduledTaskArgs Empty => new GetScheduledTaskArgs();
    }

    public sealed class GetScheduledTaskInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the scheduled task (stack*id/schedule*id)
        /// </summary>
        [Input("scheduledTaskId", required: true)]
        public Input<string> ScheduledTaskId { get; set; } = null!;

        public GetScheduledTaskInvokeArgs()
        {
        }
        public static new GetScheduledTaskInvokeArgs Empty => new GetScheduledTaskInvokeArgs();
    }


    [OutputType]
    public sealed class GetScheduledTaskResult
    {
        /// <summary>
        /// Timestamp (unix timestamp) at which time the scheduling should happen.
        /// </summary>
        public readonly int At;
        /// <summary>
        /// Command that will be run.
        /// </summary>
        public readonly string Command;
        /// <summary>
        /// List of cron schedule expressions based on which the scheduled task should be triggered.
        /// </summary>
        public readonly ImmutableArray<string> Everies;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of the schedule
        /// </summary>
        public readonly string ScheduleId;
        /// <summary>
        /// ID of the scheduled task (stack*id/schedule*id)
        /// </summary>
        public readonly string ScheduledTaskId;
        /// <summary>
        /// Stack ID of the scheduled task
        /// </summary>
        public readonly string StackId;
        /// <summary>
        /// Timezone in which the schedule is expressed. Defaults to `UTC`.
        /// </summary>
        public readonly string Timezone;

        [OutputConstructor]
        private GetScheduledTaskResult(
            int at,

            string command,

            ImmutableArray<string> everies,

            string id,

            string scheduleId,

            string scheduledTaskId,

            string stackId,

            string timezone)
        {
            At = at;
            Command = command;
            Everies = everies;
            Id = id;
            ScheduleId = scheduleId;
            ScheduledTaskId = scheduledTaskId;
            StackId = stackId;
            Timezone = timezone;
        }
    }
}
