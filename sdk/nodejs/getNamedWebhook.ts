// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `spacelift.NamedWebhook` represents a named webhook endpoint used for creating webhookswhich are referred to in Notification policies to route messages.
 */
export function getNamedWebhook(args: GetNamedWebhookArgs, opts?: pulumi.InvokeOptions): Promise<GetNamedWebhookResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getNamedWebhook:getNamedWebhook", {
        "webhookId": args.webhookId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamedWebhook.
 */
export interface GetNamedWebhookArgs {
    /**
     * ID of the webhook
     */
    webhookId: string;
}

/**
 * A collection of values returned by getNamedWebhook.
 */
export interface GetNamedWebhookResult {
    /**
     * enables or disables sending webhooks.
     */
    readonly enabled: boolean;
    /**
     * endpoint to send the requests to
     */
    readonly endpoint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * labels for the webhook to use when referring in policies or filtering them
     */
    readonly labels: string[];
    /**
     * the name for the webhook which will also be used to generate the id
     */
    readonly name: string;
    /**
     * secret used to sign each request so you're able to verify that the request comes from us.
     */
    readonly secret: string;
    /**
     * secret header keys which are currently set for this webhook
     */
    readonly secretHeaderKeys: string[];
    /**
     * ID of the space the webhook is in
     */
    readonly spaceId: string;
    /**
     * ID of the webhook
     */
    readonly webhookId: string;
}
/**
 * `spacelift.NamedWebhook` represents a named webhook endpoint used for creating webhookswhich are referred to in Notification policies to route messages.
 */
export function getNamedWebhookOutput(args: GetNamedWebhookOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNamedWebhookResult> {
    return pulumi.output(args).apply((a: any) => getNamedWebhook(a, opts))
}

/**
 * A collection of arguments for invoking getNamedWebhook.
 */
export interface GetNamedWebhookOutputArgs {
    /**
     * ID of the webhook
     */
    webhookId: pulumi.Input<string>;
}
