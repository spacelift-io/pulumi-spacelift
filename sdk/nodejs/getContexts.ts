// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * `spacelift.getContexts` represents all the contexts in the Spacelift account visible to the API user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const contexts = spacelift.getContexts({
 *     labels: [
 *         {
 *             anyOfs: [
 *                 "foo",
 *                 "bar",
 *             ],
 *         },
 *         {
 *             anyOfs: ["baz"],
 *         },
 *     ],
 * });
 * ```
 */
export function getContexts(args?: GetContextsArgs, opts?: pulumi.InvokeOptions): Promise<GetContextsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getContexts:getContexts", {
        "labels": args.labels,
    }, opts);
}

/**
 * A collection of arguments for invoking getContexts.
 */
export interface GetContextsArgs {
    labels?: inputs.GetContextsLabel[];
}

/**
 * A collection of values returned by getContexts.
 */
export interface GetContextsResult {
    readonly contexts: outputs.GetContextsContext[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Require contexts to have one of the labels
     */
    readonly labels?: outputs.GetContextsLabel[];
}
/**
 * `spacelift.getContexts` represents all the contexts in the Spacelift account visible to the API user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const contexts = spacelift.getContexts({
 *     labels: [
 *         {
 *             anyOfs: [
 *                 "foo",
 *                 "bar",
 *             ],
 *         },
 *         {
 *             anyOfs: ["baz"],
 *         },
 *     ],
 * });
 * ```
 */
export function getContextsOutput(args?: GetContextsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContextsResult> {
    return pulumi.output(args).apply((a: any) => getContexts(a, opts))
}

/**
 * A collection of arguments for invoking getContexts.
 */
export interface GetContextsOutputArgs {
    labels?: pulumi.Input<pulumi.Input<inputs.GetContextsLabelArgs>[]>;
}
