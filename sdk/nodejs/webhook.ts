// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `spacelift.Webhook` represents a webhook endpoint to which Spacelift sends the POST request about run state changes.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@spacelift-io/pulumi-spacelift";
 *
 * const webhook = new spacelift.Webhook("webhook", {
 *     endpoint: "https://example.com/webhooks",
 *     stackId: "k8s-core",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import spacelift:index/webhook:Webhook webhook stack/$STACK_ID/$WEBHOOK_ID
 * ```
 */
export class Webhook extends pulumi.CustomResource {
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhookState, opts?: pulumi.CustomResourceOptions): Webhook {
        return new Webhook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spacelift:index/webhook:Webhook';

    /**
     * Returns true if the given object is an instance of Webhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Webhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Webhook.__pulumiType;
    }

    /**
     * enables or disables sending webhooks. Defaults to `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * endpoint to send the POST request to
     */
    public readonly endpoint!: pulumi.Output<string>;
    /**
     * ID of the module which triggers the webhooks
     */
    public readonly moduleId!: pulumi.Output<string | undefined>;
    /**
     * secret used to sign each POST request so you're able to verify that the request comes from us. Defaults to an empty value.
     */
    public readonly secret!: pulumi.Output<string | undefined>;
    /**
     * ID of the stack which triggers the webhooks
     */
    public readonly stackId!: pulumi.Output<string | undefined>;

    /**
     * Create a Webhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhookArgs | WebhookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebhookState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["moduleId"] = state ? state.moduleId : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["stackId"] = state ? state.stackId : undefined;
        } else {
            const args = argsOrState as WebhookArgs | undefined;
            if ((!args || args.endpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpoint'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["moduleId"] = args ? args.moduleId : undefined;
            resourceInputs["secret"] = args?.secret ? pulumi.secret(args.secret) : undefined;
            resourceInputs["stackId"] = args ? args.stackId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Webhook.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Webhook resources.
 */
export interface WebhookState {
    /**
     * enables or disables sending webhooks. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * endpoint to send the POST request to
     */
    endpoint?: pulumi.Input<string>;
    /**
     * ID of the module which triggers the webhooks
     */
    moduleId?: pulumi.Input<string>;
    /**
     * secret used to sign each POST request so you're able to verify that the request comes from us. Defaults to an empty value.
     */
    secret?: pulumi.Input<string>;
    /**
     * ID of the stack which triggers the webhooks
     */
    stackId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Webhook resource.
 */
export interface WebhookArgs {
    /**
     * enables or disables sending webhooks. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * endpoint to send the POST request to
     */
    endpoint: pulumi.Input<string>;
    /**
     * ID of the module which triggers the webhooks
     */
    moduleId?: pulumi.Input<string>;
    /**
     * secret used to sign each POST request so you're able to verify that the request comes from us. Defaults to an empty value.
     */
    secret?: pulumi.Input<string>;
    /**
     * ID of the stack which triggers the webhooks
     */
    stackId?: pulumi.Input<string>;
}
