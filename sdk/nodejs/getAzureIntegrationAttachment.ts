// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `spacelift.AzureIntegrationAttachment` represents the attachment between a reusable Azure integration and a single stack or module.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const example = spacelift.getAzureIntegrationAttachment({
 *     integrationId: "some-integration-id",
 *     stackId: "some-stack-id",
 * });
 * ```
 */
export function getAzureIntegrationAttachment(args: GetAzureIntegrationAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetAzureIntegrationAttachmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getAzureIntegrationAttachment:getAzureIntegrationAttachment", {
        "integrationId": args.integrationId,
        "moduleId": args.moduleId,
        "stackId": args.stackId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAzureIntegrationAttachment.
 */
export interface GetAzureIntegrationAttachmentArgs {
    /**
     * ID of the integration to attach
     */
    integrationId: string;
    /**
     * ID of the module to attach the integration to
     */
    moduleId?: string;
    /**
     * ID of the stack to attach the integration to
     */
    stackId?: string;
}

/**
 * A collection of values returned by getAzureIntegrationAttachment.
 */
export interface GetAzureIntegrationAttachmentResult {
    /**
     * Internal ID of the attachment entity
     */
    readonly attachmentId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * ID of the integration to attach
     */
    readonly integrationId: string;
    /**
     * ID of the module to attach the integration to
     */
    readonly moduleId?: string;
    /**
     * Indicates whether this attachment is used for read operations
     */
    readonly read: boolean;
    /**
     * ID of the stack to attach the integration to
     */
    readonly stackId?: string;
    /**
     * Contains the Azure subscription ID to use with this Stack.  Overrides the default subscription ID set at the integration level.
     */
    readonly subscriptionId: string;
    /**
     * Indicates whether this attachment is used for write operations
     */
    readonly write: boolean;
}
/**
 * `spacelift.AzureIntegrationAttachment` represents the attachment between a reusable Azure integration and a single stack or module.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const example = spacelift.getAzureIntegrationAttachment({
 *     integrationId: "some-integration-id",
 *     stackId: "some-stack-id",
 * });
 * ```
 */
export function getAzureIntegrationAttachmentOutput(args: GetAzureIntegrationAttachmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAzureIntegrationAttachmentResult> {
    return pulumi.output(args).apply((a: any) => getAzureIntegrationAttachment(a, opts))
}

/**
 * A collection of arguments for invoking getAzureIntegrationAttachment.
 */
export interface GetAzureIntegrationAttachmentOutputArgs {
    /**
     * ID of the integration to attach
     */
    integrationId: pulumi.Input<string>;
    /**
     * ID of the module to attach the integration to
     */
    moduleId?: pulumi.Input<string>;
    /**
     * ID of the stack to attach the integration to
     */
    stackId?: pulumi.Input<string>;
}
