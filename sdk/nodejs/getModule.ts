// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const k8s_module = pulumi.output(spacelift.getModule({
 *     moduleId: "k8s-module",
 * }));
 * ```
 */
export function getModule(args: GetModuleArgs, opts?: pulumi.InvokeOptions): Promise<GetModuleResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("spacelift:index/getModule:getModule", {
        "moduleId": args.moduleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getModule.
 */
export interface GetModuleArgs {
    moduleId: string;
}

/**
 * A collection of values returned by getModule.
 */
export interface GetModuleResult {
    readonly administrative: boolean;
    readonly awsAssumeRolePolicyStatement: string;
    readonly azureDevops: outputs.GetModuleAzureDevop[];
    readonly bitbucketClouds: outputs.GetModuleBitbucketCloud[];
    readonly bitbucketDatacenters: outputs.GetModuleBitbucketDatacenter[];
    readonly branch: string;
    readonly description: string;
    readonly githubEnterprises: outputs.GetModuleGithubEnterprise[];
    readonly gitlabs: outputs.GetModuleGitlab[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: string[];
    readonly moduleId: string;
    readonly name: string;
    readonly projectRoot: string;
    readonly protectFromDeletion: boolean;
    readonly repository: string;
    readonly sharedAccounts: string[];
    readonly spaceId: string;
    readonly terraformProvider: string;
    readonly workerPoolId: string;
}

export function getModuleOutput(args: GetModuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetModuleResult> {
    return pulumi.output(args).apply(a => getModule(a, opts))
}

/**
 * A collection of arguments for invoking getModule.
 */
export interface GetModuleOutputArgs {
    moduleId: pulumi.Input<string>;
}
