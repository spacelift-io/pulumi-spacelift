// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Note:** This resource is experimental. Please continue to use `spacelift.AwsRole`.
 *
 * `spacelift.AwsIntegrationAttachment` represents the attachment between a reusable AWS integration and a single stack or module.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi_spacelift from "@spacelift-io/pulumi-spacelift";
 *
 * // For a stack
 * const thisAwsIntegrationAttachment = new spacelift.AwsIntegrationAttachment("thisAwsIntegrationAttachment", {
 *     integrationId: spacelift_aws_integration["this"].id,
 *     stackId: "my-stack-id",
 *     read: true,
 *     write: true,
 * }, {
 *     dependsOn: [aws_iam_role["this"]],
 * });
 * // For a module
 * const thisIndex_awsIntegrationAttachmentAwsIntegrationAttachment = new spacelift.AwsIntegrationAttachment("thisIndex/awsIntegrationAttachmentAwsIntegrationAttachment", {
 *     integrationId: spacelift_aws_integration["this"].id,
 *     moduleId: "my-module-id",
 *     read: true,
 *     write: true,
 * }, {
 *     dependsOn: [aws_iam_role["this"]],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import spacelift:index/awsIntegrationAttachment:AwsIntegrationAttachment read_write_my_stack $INTEGRATION_ID/$PROJECT_ID
 * ```
 */
export class AwsIntegrationAttachment extends pulumi.CustomResource {
    /**
     * Get an existing AwsIntegrationAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsIntegrationAttachmentState, opts?: pulumi.CustomResourceOptions): AwsIntegrationAttachment {
        return new AwsIntegrationAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spacelift:index/awsIntegrationAttachment:AwsIntegrationAttachment';

    /**
     * Returns true if the given object is an instance of AwsIntegrationAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsIntegrationAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsIntegrationAttachment.__pulumiType;
    }

    /**
     * Internal ID of the attachment entity
     */
    public /*out*/ readonly attachmentId!: pulumi.Output<string>;
    /**
     * ID of the integration to attach
     */
    public readonly integrationId!: pulumi.Output<string>;
    /**
     * ID of the module to attach the integration to
     */
    public readonly moduleId!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether this attachment is used for read operations. Defaults to `true`.
     */
    public readonly read!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the stack to attach the integration to
     */
    public readonly stackId!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether this attachment is used for write operations. Defaults to `true`.
     */
    public readonly write!: pulumi.Output<boolean | undefined>;

    /**
     * Create a AwsIntegrationAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsIntegrationAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsIntegrationAttachmentArgs | AwsIntegrationAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsIntegrationAttachmentState | undefined;
            resourceInputs["attachmentId"] = state ? state.attachmentId : undefined;
            resourceInputs["integrationId"] = state ? state.integrationId : undefined;
            resourceInputs["moduleId"] = state ? state.moduleId : undefined;
            resourceInputs["read"] = state ? state.read : undefined;
            resourceInputs["stackId"] = state ? state.stackId : undefined;
            resourceInputs["write"] = state ? state.write : undefined;
        } else {
            const args = argsOrState as AwsIntegrationAttachmentArgs | undefined;
            if ((!args || args.integrationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationId'");
            }
            resourceInputs["integrationId"] = args ? args.integrationId : undefined;
            resourceInputs["moduleId"] = args ? args.moduleId : undefined;
            resourceInputs["read"] = args ? args.read : undefined;
            resourceInputs["stackId"] = args ? args.stackId : undefined;
            resourceInputs["write"] = args ? args.write : undefined;
            resourceInputs["attachmentId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsIntegrationAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsIntegrationAttachment resources.
 */
export interface AwsIntegrationAttachmentState {
    /**
     * Internal ID of the attachment entity
     */
    attachmentId?: pulumi.Input<string>;
    /**
     * ID of the integration to attach
     */
    integrationId?: pulumi.Input<string>;
    /**
     * ID of the module to attach the integration to
     */
    moduleId?: pulumi.Input<string>;
    /**
     * Indicates whether this attachment is used for read operations. Defaults to `true`.
     */
    read?: pulumi.Input<boolean>;
    /**
     * ID of the stack to attach the integration to
     */
    stackId?: pulumi.Input<string>;
    /**
     * Indicates whether this attachment is used for write operations. Defaults to `true`.
     */
    write?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AwsIntegrationAttachment resource.
 */
export interface AwsIntegrationAttachmentArgs {
    /**
     * ID of the integration to attach
     */
    integrationId: pulumi.Input<string>;
    /**
     * ID of the module to attach the integration to
     */
    moduleId?: pulumi.Input<string>;
    /**
     * Indicates whether this attachment is used for read operations. Defaults to `true`.
     */
    read?: pulumi.Input<boolean>;
    /**
     * ID of the stack to attach the integration to
     */
    stackId?: pulumi.Input<string>;
    /**
     * Indicates whether this attachment is used for write operations. Defaults to `true`.
     */
    write?: pulumi.Input<boolean>;
}
