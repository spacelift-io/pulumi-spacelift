// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const k8s-module = spacelift.getStackGcpServiceAccount({
 *     moduleId: "k8s-module",
 * });
 * const k8s-core = spacelift.getStackGcpServiceAccount({
 *     stackId: "k8s-core",
 * });
 * ```
 */
export function getStackGcpServiceAccount(args?: GetStackGcpServiceAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetStackGcpServiceAccountResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getStackGcpServiceAccount:getStackGcpServiceAccount", {
        "moduleId": args.moduleId,
        "stackId": args.stackId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStackGcpServiceAccount.
 */
export interface GetStackGcpServiceAccountArgs {
    /**
     * ID of the stack which uses GCP service account credentials
     */
    moduleId?: string;
    /**
     * ID of the stack which uses GCP service account credentials
     */
    stackId?: string;
}

/**
 * A collection of values returned by getStackGcpServiceAccount.
 */
export interface GetStackGcpServiceAccountResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * ID of the stack which uses GCP service account credentials
     */
    readonly moduleId?: string;
    /**
     * email address of the GCP service account dedicated for this stack
     */
    readonly serviceAccountEmail: string;
    /**
     * ID of the stack which uses GCP service account credentials
     */
    readonly stackId?: string;
    /**
     * list of Google API scopes
     */
    readonly tokenScopes: string[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const k8s-module = spacelift.getStackGcpServiceAccount({
 *     moduleId: "k8s-module",
 * });
 * const k8s-core = spacelift.getStackGcpServiceAccount({
 *     stackId: "k8s-core",
 * });
 * ```
 */
export function getStackGcpServiceAccountOutput(args?: GetStackGcpServiceAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStackGcpServiceAccountResult> {
    return pulumi.output(args).apply((a: any) => getStackGcpServiceAccount(a, opts))
}

/**
 * A collection of arguments for invoking getStackGcpServiceAccount.
 */
export interface GetStackGcpServiceAccountOutputArgs {
    /**
     * ID of the stack which uses GCP service account credentials
     */
    moduleId?: pulumi.Input<string>;
    /**
     * ID of the stack which uses GCP service account credentials
     */
    stackId?: pulumi.Input<string>;
}
