// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * `spacelift.WorkerPool` represents a worker pool assigned to the Spacelift account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const k8s_core = pulumi.output(spacelift.getWorkerPool({
 *     workerPoolId: "k8s-core",
 * }, { async: true }));
 * ```
 *
 * <!-- schema generated by tfplugindocs -->
 * ## Schema
 *
 * ### Required
 *
 * - **worker_pool_id** (String) ID of the worker pool
 *
 * ### Optional
 *
 * - **id** (String) The ID of this resource.
 *
 * ### Read-Only
 *
 * - **config** (String, Sensitive) credentials necessary to connect WorkerPool's workers to the control plane
 * - **description** (String) description of the worker pool
 * - **labels** (Set of String)
 * - **name** (String) name of the worker pool
 */
export function getWorkerPool(args: GetWorkerPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkerPoolResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("spacelift:index/getWorkerPool:getWorkerPool", {
        "workerPoolId": args.workerPoolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkerPool.
 */
export interface GetWorkerPoolArgs {
    readonly workerPoolId: string;
}

/**
 * A collection of values returned by getWorkerPool.
 */
export interface GetWorkerPoolResult {
    readonly config: string;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: string[];
    readonly name: string;
    readonly workerPoolId: string;
}
