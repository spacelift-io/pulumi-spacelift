import * as pulumi from "@pulumi/pulumi";
/**
 * `spacelift.Policy` represents a Spacelift **policy** - a collection of customer-defined rules that are applied by Spacelift at one of the decision points within the application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const policy = spacelift.getPolicy({
 *     policyId: spacelift_policy.policy.id,
 * });
 * export const policyBody = policy.then(policy => policy.body);
 * ```
 *
 * <!-- schema generated by tfplugindocs -->
 * ## Schema
 *
 * ### Required
 *
 * - **policy_id** (String) immutable ID (slug) of the policy
 *
 * ### Optional
 *
 * - **id** (String) The ID of this resource.
 *
 * ### Read-Only
 *
 * - **body** (String) body of the policy
 * - **labels** (Set of String)
 * - **name** (String) name of the policy
 * - **type** (String) type of the policy
 */
export declare function getPolicy(args: GetPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyResult>;
/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyArgs {
    readonly policyId: string;
}
/**
 * A collection of values returned by getPolicy.
 */
export interface GetPolicyResult {
    readonly body: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: string[];
    readonly name: string;
    readonly policyId: string;
    readonly type: string;
}
