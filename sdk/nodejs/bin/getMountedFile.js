"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `spacelift.MountedFile` represents a file mounted in each Run's workspace that is part of a configuration of a context (`spacelift.Context`), stack (`spacelift.Stack`) or a module (`spacelift.Module`). In principle, it's very similar to an environment variable (`spacelift.EnvironmentVariable`) except that the value is written to the filesystem rather than passed to the environment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * // For a context
 * const ireland_kubeconfig = pulumi.output(spacelift.getMountedFile({
 *     contextId: "prod-k8s-ie",
 *     relativePath: "kubeconfig",
 * }, { async: true }));
 * // For a module
 * const module_kubeconfig = pulumi.output(spacelift.getMountedFile({
 *     moduleId: "k8s-module",
 *     relativePath: "kubeconfig",
 * }, { async: true }));
 * // For a stack
 * const core_kubeconfig = pulumi.output(spacelift.getMountedFile({
 *     relativePath: "kubeconfig",
 *     stackId: "k8s-core",
 * }, { async: true }));
 * ```
 *
 * <!-- schema generated by tfplugindocs -->
 * ## Schema
 *
 * ### Required
 *
 * - **relative_path** (String) relative path to the mounted file
 *
 * ### Optional
 *
 * - **context_id** (String) ID of the context where the mounted file is stored
 * - **id** (String) The ID of this resource.
 * - **module_id** (String) ID of the module where the mounted file is stored
 * - **stack_id** (String) ID of the stack where the mounted file is stored
 *
 * ### Read-Only
 *
 * - **checksum** (String) SHA-256 checksum of the value
 * - **content** (String, Sensitive) content of the mounted file encoded using Base-64
 * - **write_only** (Boolean) indicates whether the value can be read back outside a Run
 */
function getMountedFile(args, opts) {
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("spacelift:index/getMountedFile:getMountedFile", {
        "contextId": args.contextId,
        "moduleId": args.moduleId,
        "relativePath": args.relativePath,
        "stackId": args.stackId,
    }, opts);
}
exports.getMountedFile = getMountedFile;
//# sourceMappingURL=getMountedFile.js.map