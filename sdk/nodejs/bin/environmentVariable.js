"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class EnvironmentVariable extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["checksum"] = state ? state.checksum : undefined;
            inputs["contextId"] = state ? state.contextId : undefined;
            inputs["moduleId"] = state ? state.moduleId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["stackId"] = state ? state.stackId : undefined;
            inputs["value"] = state ? state.value : undefined;
            inputs["writeOnly"] = state ? state.writeOnly : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.name === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.value === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'value'");
            }
            inputs["contextId"] = args ? args.contextId : undefined;
            inputs["moduleId"] = args ? args.moduleId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["stackId"] = args ? args.stackId : undefined;
            inputs["value"] = args ? args.value : undefined;
            inputs["writeOnly"] = args ? args.writeOnly : undefined;
            inputs["checksum"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(EnvironmentVariable.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing EnvironmentVariable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new EnvironmentVariable(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of EnvironmentVariable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnvironmentVariable.__pulumiType;
    }
}
exports.EnvironmentVariable = EnvironmentVariable;
/** @internal */
EnvironmentVariable.__pulumiType = 'spacelift:index/environmentVariable:EnvironmentVariable';
//# sourceMappingURL=environmentVariable.js.map