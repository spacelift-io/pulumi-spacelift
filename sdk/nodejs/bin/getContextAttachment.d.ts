import * as pulumi from "@pulumi/pulumi";
/**
 * `spacelift.ContextAttachment` represents a Spacelift attachment of a single context to a single stack or module, with a predefined priority.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * // With a stack.
 * const apps_k8s_ie = pulumi.output(spacelift.getContextAttachment({
 *     contextId: "prod-k8s-ie",
 *     stackId: "apps-cluster",
 * }, { async: true }));
 * // With a module.
 * const kafka_k8s_ie = pulumi.output(spacelift.getContextAttachment({
 *     contextId: "prod-k8s-ie",
 *     moduleId: "terraform-aws-kafka",
 * }, { async: true }));
 * ```
 *
 * <!-- schema generated by tfplugindocs -->
 * ## Schema
 *
 * ### Required
 *
 * - **context_id** (String) ID of the attached context
 *
 * ### Optional
 *
 * - **id** (String) The ID of this resource.
 * - **module_id** (String) ID of the attached module
 * - **stack_id** (String) ID of the attached stack
 *
 * ### Read-Only
 *
 * - **priority** (Number) priority of the context attachment, used in case of conflicts
 */
export declare function getContextAttachment(args: GetContextAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetContextAttachmentResult>;
/**
 * A collection of arguments for invoking getContextAttachment.
 */
export interface GetContextAttachmentArgs {
    readonly contextId: string;
    readonly moduleId?: string;
    readonly stackId?: string;
}
/**
 * A collection of values returned by getContextAttachment.
 */
export interface GetContextAttachmentResult {
    readonly contextId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly moduleId?: string;
    readonly priority: number;
    readonly stackId?: string;
}
