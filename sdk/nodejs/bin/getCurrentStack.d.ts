import * as pulumi from "@pulumi/pulumi";
/**
 * `spacelift.getCurrentStack` is a data source that provides information about the current administrative stack if the run is executed within Spacelift by a stack or module. This allows clever tricks like attaching contexts or policies to the stack that manages them.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const this = spacelift.getCurrentStack({});
 * const core_kubeconfig = new spacelift.EnvironmentVariable("core-kubeconfig", {
 *     stackId: _this.then(_this => _this.id),
 *     name: "CHUNKY",
 *     value: "bacon",
 * });
 * ```
 *
 * <!-- schema generated by tfplugindocs -->
 * ## Schema
 *
 * ### Optional
 *
 * - **id** (String) The ID of this resource.
 */
export declare function getCurrentStack(opts?: pulumi.InvokeOptions): Promise<GetCurrentStackResult>;
/**
 * A collection of values returned by getCurrentStack.
 */
export interface GetCurrentStackResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
