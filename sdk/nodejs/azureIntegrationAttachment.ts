// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `spacelift.AzureIntegrationAttachment` represents the attachment between a reusable Azure integration and a single stack or module.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@spacelift-io/pulumi-spacelift";
 *
 * // For a stack
 * const readonly = new spacelift.AzureIntegrationAttachment("readonly", {
 *     integrationId: spacelift_azure_integration.example.id,
 *     stackId: spacelift_stack.example.id,
 *     write: false,
 *     subscriptionId: "subscription_id",
 * });
 * // For a module
 * const writeonly = new spacelift.AzureIntegrationAttachment("writeonly", {
 *     integrationId: spacelift_azure_integration.example.id,
 *     stackId: spacelift_module.example.id,
 *     read: false,
 *     subscriptionId: "subscription_id",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import spacelift:index/azureIntegrationAttachment:AzureIntegrationAttachment readonly $INTEGRATION_ID/$STACK_ID
 * ```
 *
 * ```sh
 *  $ pulumi import spacelift:index/azureIntegrationAttachment:AzureIntegrationAttachment writeonly $INTEGRATION_ID/$MODULE_ID
 * ```
 */
export class AzureIntegrationAttachment extends pulumi.CustomResource {
    /**
     * Get an existing AzureIntegrationAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureIntegrationAttachmentState, opts?: pulumi.CustomResourceOptions): AzureIntegrationAttachment {
        return new AzureIntegrationAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spacelift:index/azureIntegrationAttachment:AzureIntegrationAttachment';

    /**
     * Returns true if the given object is an instance of AzureIntegrationAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureIntegrationAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureIntegrationAttachment.__pulumiType;
    }

    /**
     * Internal ID of the attachment entity
     */
    public /*out*/ readonly attachmentId!: pulumi.Output<string>;
    /**
     * ID of the integration to attach
     */
    public readonly integrationId!: pulumi.Output<string>;
    /**
     * ID of the module to attach the integration to
     */
    public readonly moduleId!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether this attachment is used for read operations. Defaults to `true`.
     */
    public readonly read!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the stack to attach the integration to
     */
    public readonly stackId!: pulumi.Output<string | undefined>;
    /**
     * Contains the Azure subscription ID to use with this Stack.  Overrides the default subscription ID set at the integration level.
     */
    public readonly subscriptionId!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether this attachment is used for write operations. Defaults to `true`.
     */
    public readonly write!: pulumi.Output<boolean | undefined>;

    /**
     * Create a AzureIntegrationAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureIntegrationAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureIntegrationAttachmentArgs | AzureIntegrationAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureIntegrationAttachmentState | undefined;
            resourceInputs["attachmentId"] = state ? state.attachmentId : undefined;
            resourceInputs["integrationId"] = state ? state.integrationId : undefined;
            resourceInputs["moduleId"] = state ? state.moduleId : undefined;
            resourceInputs["read"] = state ? state.read : undefined;
            resourceInputs["stackId"] = state ? state.stackId : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["write"] = state ? state.write : undefined;
        } else {
            const args = argsOrState as AzureIntegrationAttachmentArgs | undefined;
            if ((!args || args.integrationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationId'");
            }
            resourceInputs["integrationId"] = args ? args.integrationId : undefined;
            resourceInputs["moduleId"] = args ? args.moduleId : undefined;
            resourceInputs["read"] = args ? args.read : undefined;
            resourceInputs["stackId"] = args ? args.stackId : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["write"] = args ? args.write : undefined;
            resourceInputs["attachmentId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureIntegrationAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureIntegrationAttachment resources.
 */
export interface AzureIntegrationAttachmentState {
    /**
     * Internal ID of the attachment entity
     */
    attachmentId?: pulumi.Input<string>;
    /**
     * ID of the integration to attach
     */
    integrationId?: pulumi.Input<string>;
    /**
     * ID of the module to attach the integration to
     */
    moduleId?: pulumi.Input<string>;
    /**
     * Indicates whether this attachment is used for read operations. Defaults to `true`.
     */
    read?: pulumi.Input<boolean>;
    /**
     * ID of the stack to attach the integration to
     */
    stackId?: pulumi.Input<string>;
    /**
     * Contains the Azure subscription ID to use with this Stack.  Overrides the default subscription ID set at the integration level.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * Indicates whether this attachment is used for write operations. Defaults to `true`.
     */
    write?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AzureIntegrationAttachment resource.
 */
export interface AzureIntegrationAttachmentArgs {
    /**
     * ID of the integration to attach
     */
    integrationId: pulumi.Input<string>;
    /**
     * ID of the module to attach the integration to
     */
    moduleId?: pulumi.Input<string>;
    /**
     * Indicates whether this attachment is used for read operations. Defaults to `true`.
     */
    read?: pulumi.Input<boolean>;
    /**
     * ID of the stack to attach the integration to
     */
    stackId?: pulumi.Input<string>;
    /**
     * Contains the Azure subscription ID to use with this Stack.  Overrides the default subscription ID set at the integration level.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * Indicates whether this attachment is used for write operations. Defaults to `true`.
     */
    write?: pulumi.Input<boolean>;
}
