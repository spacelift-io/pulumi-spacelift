// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `spacelift.AzureIntegration` represents an integration with an Azure AD tenant. This integration is account-level and needs to be explicitly attached to individual stacks in order to take effect. Note that you will need to provide admin consent manually for the integration to work
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spacelift from "@pulumi/spacelift";
 *
 * const example = pulumi.output(spacelift.getAzureIntegration({
 *     integrationId: "01FPAH5J0JFYSM5953T9KT2VS9",
 * }));
 * ```
 */
export function getAzureIntegration(args: GetAzureIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetAzureIntegrationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("spacelift:index/getAzureIntegration:getAzureIntegration", {
        "integrationId": args.integrationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAzureIntegration.
 */
export interface GetAzureIntegrationArgs {
    integrationId: string;
}

/**
 * A collection of values returned by getAzureIntegration.
 */
export interface GetAzureIntegrationResult {
    readonly adminConsentProvided: boolean;
    readonly adminConsentUrl: string;
    readonly applicationId: string;
    readonly defaultSubscriptionId: string;
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly integrationId: string;
    readonly labels: string[];
    readonly name: string;
    readonly spaceId: string;
    readonly tenantId: string;
}

export function getAzureIntegrationOutput(args: GetAzureIntegrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAzureIntegrationResult> {
    return pulumi.output(args).apply(a => getAzureIntegration(a, opts))
}

/**
 * A collection of arguments for invoking getAzureIntegration.
 */
export interface GetAzureIntegrationOutputArgs {
    integrationId: pulumi.Input<string>;
}
