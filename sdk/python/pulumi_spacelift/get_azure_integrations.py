# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetAzureIntegrationsResult',
    'AwaitableGetAzureIntegrationsResult',
    'get_azure_integrations',
    'get_azure_integrations_output',
]

@pulumi.output_type
class GetAzureIntegrationsResult:
    """
    A collection of values returned by getAzureIntegrations.
    """
    def __init__(__self__, id=None, integrations=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if integrations and not isinstance(integrations, list):
            raise TypeError("Expected argument 'integrations' to be a list")
        pulumi.set(__self__, "integrations", integrations)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def integrations(self) -> Sequence['outputs.GetAzureIntegrationsIntegrationResult']:
        return pulumi.get(self, "integrations")


class AwaitableGetAzureIntegrationsResult(GetAzureIntegrationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAzureIntegrationsResult(
            id=self.id,
            integrations=self.integrations)


def get_azure_integrations(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAzureIntegrationsResult:
    """
    `get_azure_integrations` represents a list of all the Azure integrations in the Spacelift account visible to the API user.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('spacelift:index/getAzureIntegrations:getAzureIntegrations', __args__, opts=opts, typ=GetAzureIntegrationsResult).value

    return AwaitableGetAzureIntegrationsResult(
        id=pulumi.get(__ret__, 'id'),
        integrations=pulumi.get(__ret__, 'integrations'))


@_utilities.lift_output_func(get_azure_integrations)
def get_azure_integrations_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAzureIntegrationsResult]:
    """
    `get_azure_integrations` represents a list of all the Azure integrations in the Spacelift account visible to the API user.
    """
    ...
