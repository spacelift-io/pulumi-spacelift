# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables

__all__ = [
    'GetCurrentStackResult',
    'AwaitableGetCurrentStackResult',
    'get_current_stack',
]

@pulumi.output_type
class GetCurrentStackResult:
    """
    A collection of values returned by getCurrentStack.
    """
    def __init__(__self__, id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetCurrentStackResult(GetCurrentStackResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCurrentStackResult(
            id=self.id)


def get_current_stack(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCurrentStackResult:
    """
    `getCurrentStack` is a data source that provides information about the current administrative stack if the run is executed within Spacelift by a stack or module. This allows clever tricks like attaching contexts or policies to the stack that manages them.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_spacelift as spacelift

    this = spacelift.get_current_stack()
    core_kubeconfig = spacelift.EnvironmentVariable("core-kubeconfig",
        stack_id=this.id,
        name="CHUNKY",
        value="bacon")
    ```

    <!-- schema generated by tfplugindocs -->
    ## Schema

    ### Optional

    - **id** (String) The ID of this resource.
    """
    __args__ = dict()
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('spacelift:index/getCurrentStack:getCurrentStack', __args__, opts=opts, typ=GetCurrentStackResult).value

    return AwaitableGetCurrentStackResult(
        id=__ret__.id)
