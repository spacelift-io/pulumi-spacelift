# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetSpacesResult',
    'AwaitableGetSpacesResult',
    'get_spaces',
    'get_spaces_output',
]

@pulumi.output_type
class GetSpacesResult:
    """
    A collection of values returned by getSpaces.
    """
    def __init__(__self__, id=None, spaces=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if spaces and not isinstance(spaces, list):
            raise TypeError("Expected argument 'spaces' to be a list")
        pulumi.set(__self__, "spaces", spaces)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def spaces(self) -> Sequence['outputs.GetSpacesSpaceResult']:
        return pulumi.get(self, "spaces")


class AwaitableGetSpacesResult(GetSpacesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSpacesResult(
            id=self.id,
            spaces=self.spaces)


def get_spaces(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSpacesResult:
    """
    `get_spaces` can find all spaces in the spacelift organization.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_spacelift as spacelift

    this = spacelift.get_spaces()
    pulumi.export("spaces", this.spaces)
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('spacelift:index/getSpaces:getSpaces', __args__, opts=opts, typ=GetSpacesResult).value

    return AwaitableGetSpacesResult(
        id=pulumi.get(__ret__, 'id'),
        spaces=pulumi.get(__ret__, 'spaces'))


@_utilities.lift_output_func(get_spaces)
def get_spaces_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSpacesResult]:
    """
    `get_spaces` can find all spaces in the spacelift organization.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_spacelift as spacelift

    this = spacelift.get_spaces()
    pulumi.export("spaces", this.spaces)
    ```
    """
    ...
