# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetWorkerPoolsResult',
    'AwaitableGetWorkerPoolsResult',
    'get_worker_pools',
]

@pulumi.output_type
class GetWorkerPoolsResult:
    """
    A collection of values returned by getWorkerPools.
    """
    def __init__(__self__, id=None, worker_pools=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if worker_pools and not isinstance(worker_pools, list):
            raise TypeError("Expected argument 'worker_pools' to be a list")
        pulumi.set(__self__, "worker_pools", worker_pools)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="workerPools")
    def worker_pools(self) -> Sequence['outputs.GetWorkerPoolsWorkerPoolResult']:
        return pulumi.get(self, "worker_pools")


class AwaitableGetWorkerPoolsResult(GetWorkerPoolsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWorkerPoolsResult(
            id=self.id,
            worker_pools=self.worker_pools)


def get_worker_pools(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWorkerPoolsResult:
    """
    `get_worker_pools` represents the worker pools assigned to the Spacelift account.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_spacelift as spacelift

    worker_pools = spacelift.get_worker_pools()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('spacelift:index/getWorkerPools:getWorkerPools', __args__, opts=opts, typ=GetWorkerPoolsResult).value

    return AwaitableGetWorkerPoolsResult(
        id=__ret__.id,
        worker_pools=__ret__.worker_pools)
