# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetVcsAgentPoolResult',
    'AwaitableGetVcsAgentPoolResult',
    'get_vcs_agent_pool',
    'get_vcs_agent_pool_output',
]

@pulumi.output_type
class GetVcsAgentPoolResult:
    """
    A collection of values returned by getVcsAgentPool.
    """
    def __init__(__self__, description=None, id=None, name=None, vcs_agent_pool_id=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if vcs_agent_pool_id and not isinstance(vcs_agent_pool_id, str):
            raise TypeError("Expected argument 'vcs_agent_pool_id' to be a str")
        pulumi.set(__self__, "vcs_agent_pool_id", vcs_agent_pool_id)

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Free-form VCS agent pool description for users
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the VCS agent pool
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="vcsAgentPoolId")
    def vcs_agent_pool_id(self) -> str:
        """
        ID of the VCS agent pool to retrieve
        """
        return pulumi.get(self, "vcs_agent_pool_id")


class AwaitableGetVcsAgentPoolResult(GetVcsAgentPoolResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVcsAgentPoolResult(
            description=self.description,
            id=self.id,
            name=self.name,
            vcs_agent_pool_id=self.vcs_agent_pool_id)


def get_vcs_agent_pool(vcs_agent_pool_id: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVcsAgentPoolResult:
    """
    `VcsAgentPool` represents a Spacelift **VCS agent pool** - a logical group of proxies allowing Spacelift to access private VCS installations


    :param str vcs_agent_pool_id: ID of the VCS agent pool to retrieve
    """
    __args__ = dict()
    __args__['vcsAgentPoolId'] = vcs_agent_pool_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('spacelift:index/getVcsAgentPool:getVcsAgentPool', __args__, opts=opts, typ=GetVcsAgentPoolResult).value

    return AwaitableGetVcsAgentPoolResult(
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        vcs_agent_pool_id=pulumi.get(__ret__, 'vcs_agent_pool_id'))


@_utilities.lift_output_func(get_vcs_agent_pool)
def get_vcs_agent_pool_output(vcs_agent_pool_id: Optional[pulumi.Input[str]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetVcsAgentPoolResult]:
    """
    `VcsAgentPool` represents a Spacelift **VCS agent pool** - a logical group of proxies allowing Spacelift to access private VCS installations


    :param str vcs_agent_pool_id: ID of the VCS agent pool to retrieve
    """
    ...
