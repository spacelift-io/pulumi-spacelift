# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables

__all__ = [
    'GetGitHubEnterpriseIntegrationResult',
    'AwaitableGetGitHubEnterpriseIntegrationResult',
    'get_git_hub_enterprise_integration',
]

@pulumi.output_type
class GetGitHubEnterpriseIntegrationResult:
    """
    A collection of values returned by getGitHubEnterpriseIntegration.
    """
    def __init__(__self__, api_host=None, app_id=None, id=None, webhook_secret=None):
        if api_host and not isinstance(api_host, str):
            raise TypeError("Expected argument 'api_host' to be a str")
        pulumi.set(__self__, "api_host", api_host)
        if app_id and not isinstance(app_id, str):
            raise TypeError("Expected argument 'app_id' to be a str")
        pulumi.set(__self__, "app_id", app_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if webhook_secret and not isinstance(webhook_secret, str):
            raise TypeError("Expected argument 'webhook_secret' to be a str")
        pulumi.set(__self__, "webhook_secret", webhook_secret)

    @property
    @pulumi.getter(name="apiHost")
    def api_host(self) -> str:
        return pulumi.get(self, "api_host")

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> str:
        return pulumi.get(self, "app_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="webhookSecret")
    def webhook_secret(self) -> str:
        return pulumi.get(self, "webhook_secret")


class AwaitableGetGitHubEnterpriseIntegrationResult(GetGitHubEnterpriseIntegrationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGitHubEnterpriseIntegrationResult(
            api_host=self.api_host,
            app_id=self.app_id,
            id=self.id,
            webhook_secret=self.webhook_secret)


def get_git_hub_enterprise_integration(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGitHubEnterpriseIntegrationResult:
    """
    `getGitHubEnterpriseIntegration` returns details about Github Enterprise integration

    ## Example Usage

    ```python
    import pulumi
    import pulumi_spacelift as spacelift

    github_enterprise_integration = spacelift.get_git_hub_enterprise_integration()
    ```

    <!-- schema generated by tfplugindocs -->
    ## Schema

    ### Optional

    - **id** (String) The ID of this resource.

    ### Read-Only

    - **api_host** (String) Github integration api host
    - **app_id** (String) Github integration app id
    - **webhook_secret** (String) Github integration webhook secret
    """
    __args__ = dict()
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('spacelift:index/getGitHubEnterpriseIntegration:getGitHubEnterpriseIntegration', __args__, opts=opts, typ=GetGitHubEnterpriseIntegrationResult).value

    return AwaitableGetGitHubEnterpriseIntegrationResult(
        api_host=__ret__.api_host,
        app_id=__ret__.app_id,
        id=__ret__.id,
        webhook_secret=__ret__.webhook_secret)
