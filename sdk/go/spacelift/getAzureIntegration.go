// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzureIntegration` represents an integration with an Azure AD tenant. This integration is account-level and needs to be explicitly attached to individual stacks in order to take effect. Note that you will need to provide admin consent manually for the integration to work
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-spacelift/sdk/go/spacelift"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/spacelift-io/pulumi-spacelift/sdk/go/spacelift"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := spacelift.LookupAzureIntegration(ctx, &GetAzureIntegrationArgs{
// 			IntegrationId: "01FPAH5J0JFYSM5953T9KT2VS9",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupAzureIntegration(ctx *pulumi.Context, args *LookupAzureIntegrationArgs, opts ...pulumi.InvokeOption) (*LookupAzureIntegrationResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupAzureIntegrationResult
	err := ctx.Invoke("spacelift:index/getAzureIntegration:getAzureIntegration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAzureIntegration.
type LookupAzureIntegrationArgs struct {
	IntegrationId string `pulumi:"integrationId"`
}

// A collection of values returned by getAzureIntegration.
type LookupAzureIntegrationResult struct {
	AdminConsentProvided  bool   `pulumi:"adminConsentProvided"`
	AdminConsentUrl       string `pulumi:"adminConsentUrl"`
	ApplicationId         string `pulumi:"applicationId"`
	DefaultSubscriptionId string `pulumi:"defaultSubscriptionId"`
	DisplayName           string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id            string   `pulumi:"id"`
	IntegrationId string   `pulumi:"integrationId"`
	Labels        []string `pulumi:"labels"`
	Name          string   `pulumi:"name"`
	SpaceId       string   `pulumi:"spaceId"`
	TenantId      string   `pulumi:"tenantId"`
}

func LookupAzureIntegrationOutput(ctx *pulumi.Context, args LookupAzureIntegrationOutputArgs, opts ...pulumi.InvokeOption) LookupAzureIntegrationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAzureIntegrationResult, error) {
			args := v.(LookupAzureIntegrationArgs)
			r, err := LookupAzureIntegration(ctx, &args, opts...)
			var s LookupAzureIntegrationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAzureIntegrationResultOutput)
}

// A collection of arguments for invoking getAzureIntegration.
type LookupAzureIntegrationOutputArgs struct {
	IntegrationId pulumi.StringInput `pulumi:"integrationId"`
}

func (LookupAzureIntegrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureIntegrationArgs)(nil)).Elem()
}

// A collection of values returned by getAzureIntegration.
type LookupAzureIntegrationResultOutput struct{ *pulumi.OutputState }

func (LookupAzureIntegrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureIntegrationResult)(nil)).Elem()
}

func (o LookupAzureIntegrationResultOutput) ToLookupAzureIntegrationResultOutput() LookupAzureIntegrationResultOutput {
	return o
}

func (o LookupAzureIntegrationResultOutput) ToLookupAzureIntegrationResultOutputWithContext(ctx context.Context) LookupAzureIntegrationResultOutput {
	return o
}

func (o LookupAzureIntegrationResultOutput) AdminConsentProvided() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) bool { return v.AdminConsentProvided }).(pulumi.BoolOutput)
}

func (o LookupAzureIntegrationResultOutput) AdminConsentUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) string { return v.AdminConsentUrl }).(pulumi.StringOutput)
}

func (o LookupAzureIntegrationResultOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) string { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o LookupAzureIntegrationResultOutput) DefaultSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) string { return v.DefaultSubscriptionId }).(pulumi.StringOutput)
}

func (o LookupAzureIntegrationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAzureIntegrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAzureIntegrationResultOutput) IntegrationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) string { return v.IntegrationId }).(pulumi.StringOutput)
}

func (o LookupAzureIntegrationResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

func (o LookupAzureIntegrationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupAzureIntegrationResultOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) string { return v.SpaceId }).(pulumi.StringOutput)
}

func (o LookupAzureIntegrationResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAzureIntegrationResultOutput{})
}
