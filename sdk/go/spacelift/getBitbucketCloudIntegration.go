// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift/internal"
)

// `getBitbucketCloudIntegration` returns details about Bitbucket Cloud integration
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := spacelift.GetBitbucketCloudIntegration(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBitbucketCloudIntegration(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetBitbucketCloudIntegrationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBitbucketCloudIntegrationResult
	err := ctx.Invoke("spacelift:index/getBitbucketCloudIntegration:getBitbucketCloudIntegration", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getBitbucketCloudIntegration.
type GetBitbucketCloudIntegrationResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Bitbucket Cloud username
	Username string `pulumi:"username"`
}

func GetBitbucketCloudIntegrationOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetBitbucketCloudIntegrationResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetBitbucketCloudIntegrationResult, error) {
		r, err := GetBitbucketCloudIntegration(ctx, opts...)
		var s GetBitbucketCloudIntegrationResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(GetBitbucketCloudIntegrationResultOutput)
}

// A collection of values returned by getBitbucketCloudIntegration.
type GetBitbucketCloudIntegrationResultOutput struct{ *pulumi.OutputState }

func (GetBitbucketCloudIntegrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketCloudIntegrationResult)(nil)).Elem()
}

func (o GetBitbucketCloudIntegrationResultOutput) ToGetBitbucketCloudIntegrationResultOutput() GetBitbucketCloudIntegrationResultOutput {
	return o
}

func (o GetBitbucketCloudIntegrationResultOutput) ToGetBitbucketCloudIntegrationResultOutputWithContext(ctx context.Context) GetBitbucketCloudIntegrationResultOutput {
	return o
}

func (o GetBitbucketCloudIntegrationResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetBitbucketCloudIntegrationResult] {
	return pulumix.Output[GetBitbucketCloudIntegrationResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetBitbucketCloudIntegrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCloudIntegrationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Bitbucket Cloud username
func (o GetBitbucketCloudIntegrationResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCloudIntegrationResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBitbucketCloudIntegrationResultOutput{})
}
