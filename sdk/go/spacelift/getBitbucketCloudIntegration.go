// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift/internal"
)

// `getBitbucketCloudIntegration` returns details about Bitbucket Cloud integration
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := spacelift.GetBitbucketCloudIntegration(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBitbucketCloudIntegration(ctx *pulumi.Context, args *GetBitbucketCloudIntegrationArgs, opts ...pulumi.InvokeOption) (*GetBitbucketCloudIntegrationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBitbucketCloudIntegrationResult
	err := ctx.Invoke("spacelift:index/getBitbucketCloudIntegration:getBitbucketCloudIntegration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBitbucketCloudIntegration.
type GetBitbucketCloudIntegrationArgs struct {
	// Bitbucket Cloud integration id. If not provided, the default integration will be returned
	Id *string `pulumi:"id"`
}

// A collection of values returned by getBitbucketCloudIntegration.
type GetBitbucketCloudIntegrationResult struct {
	// Bitbucket Cloud integration description
	Description string `pulumi:"description"`
	// Bitbucket Cloud integration id. If not provided, the default integration will be returned
	Id *string `pulumi:"id"`
	// Bitbucket Cloud integration is default
	IsDefault bool `pulumi:"isDefault"`
	// Bitbucket Cloud integration labels
	Labels []string `pulumi:"labels"`
	// Bitbucket Cloud integration name
	Name string `pulumi:"name"`
	// Bitbucket Cloud integration space id
	SpaceId string `pulumi:"spaceId"`
	// Bitbucket Cloud username
	Username string `pulumi:"username"`
	// Bitbucket Cloud integration webhook URL
	WebhookUrl string `pulumi:"webhookUrl"`
}

func GetBitbucketCloudIntegrationOutput(ctx *pulumi.Context, args GetBitbucketCloudIntegrationOutputArgs, opts ...pulumi.InvokeOption) GetBitbucketCloudIntegrationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBitbucketCloudIntegrationResult, error) {
			args := v.(GetBitbucketCloudIntegrationArgs)
			r, err := GetBitbucketCloudIntegration(ctx, &args, opts...)
			var s GetBitbucketCloudIntegrationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBitbucketCloudIntegrationResultOutput)
}

// A collection of arguments for invoking getBitbucketCloudIntegration.
type GetBitbucketCloudIntegrationOutputArgs struct {
	// Bitbucket Cloud integration id. If not provided, the default integration will be returned
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetBitbucketCloudIntegrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketCloudIntegrationArgs)(nil)).Elem()
}

// A collection of values returned by getBitbucketCloudIntegration.
type GetBitbucketCloudIntegrationResultOutput struct{ *pulumi.OutputState }

func (GetBitbucketCloudIntegrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketCloudIntegrationResult)(nil)).Elem()
}

func (o GetBitbucketCloudIntegrationResultOutput) ToGetBitbucketCloudIntegrationResultOutput() GetBitbucketCloudIntegrationResultOutput {
	return o
}

func (o GetBitbucketCloudIntegrationResultOutput) ToGetBitbucketCloudIntegrationResultOutputWithContext(ctx context.Context) GetBitbucketCloudIntegrationResultOutput {
	return o
}

func (o GetBitbucketCloudIntegrationResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetBitbucketCloudIntegrationResult] {
	return pulumix.Output[GetBitbucketCloudIntegrationResult]{
		OutputState: o.OutputState,
	}
}

// Bitbucket Cloud integration description
func (o GetBitbucketCloudIntegrationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCloudIntegrationResult) string { return v.Description }).(pulumi.StringOutput)
}

// Bitbucket Cloud integration id. If not provided, the default integration will be returned
func (o GetBitbucketCloudIntegrationResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBitbucketCloudIntegrationResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Bitbucket Cloud integration is default
func (o GetBitbucketCloudIntegrationResultOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBitbucketCloudIntegrationResult) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Bitbucket Cloud integration labels
func (o GetBitbucketCloudIntegrationResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBitbucketCloudIntegrationResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// Bitbucket Cloud integration name
func (o GetBitbucketCloudIntegrationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCloudIntegrationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Bitbucket Cloud integration space id
func (o GetBitbucketCloudIntegrationResultOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCloudIntegrationResult) string { return v.SpaceId }).(pulumi.StringOutput)
}

// Bitbucket Cloud username
func (o GetBitbucketCloudIntegrationResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCloudIntegrationResult) string { return v.Username }).(pulumi.StringOutput)
}

// Bitbucket Cloud integration webhook URL
func (o GetBitbucketCloudIntegrationResultOutput) WebhookUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCloudIntegrationResult) string { return v.WebhookUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBitbucketCloudIntegrationResultOutput{})
}
