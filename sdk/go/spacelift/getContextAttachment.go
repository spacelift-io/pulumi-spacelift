// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `ContextAttachment` represents a Spacelift attachment of a single context to a single stack or module, with a predefined priority.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-spacelift/sdk/go/spacelift"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/spacelift-io/pulumi-spacelift/sdk/go/spacelift"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := spacelift.LookupContextAttachment(ctx, &GetContextAttachmentArgs{
// 			ContextId: "prod-k8s-ie",
// 			StackId:   pulumi.StringRef("apps-cluster"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = spacelift.LookupContextAttachment(ctx, &GetContextAttachmentArgs{
// 			ContextId: "prod-k8s-ie",
// 			ModuleId:  pulumi.StringRef("terraform-aws-kafka"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupContextAttachment(ctx *pulumi.Context, args *LookupContextAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupContextAttachmentResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupContextAttachmentResult
	err := ctx.Invoke("spacelift:index/getContextAttachment:getContextAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContextAttachment.
type LookupContextAttachmentArgs struct {
	ContextId string  `pulumi:"contextId"`
	ModuleId  *string `pulumi:"moduleId"`
	StackId   *string `pulumi:"stackId"`
}

// A collection of values returned by getContextAttachment.
type LookupContextAttachmentResult struct {
	ContextId string `pulumi:"contextId"`
	// The provider-assigned unique ID for this managed resource.
	Id       string  `pulumi:"id"`
	ModuleId *string `pulumi:"moduleId"`
	Priority int     `pulumi:"priority"`
	StackId  *string `pulumi:"stackId"`
}

func LookupContextAttachmentOutput(ctx *pulumi.Context, args LookupContextAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupContextAttachmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContextAttachmentResult, error) {
			args := v.(LookupContextAttachmentArgs)
			r, err := LookupContextAttachment(ctx, &args, opts...)
			var s LookupContextAttachmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContextAttachmentResultOutput)
}

// A collection of arguments for invoking getContextAttachment.
type LookupContextAttachmentOutputArgs struct {
	ContextId pulumi.StringInput    `pulumi:"contextId"`
	ModuleId  pulumi.StringPtrInput `pulumi:"moduleId"`
	StackId   pulumi.StringPtrInput `pulumi:"stackId"`
}

func (LookupContextAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContextAttachmentArgs)(nil)).Elem()
}

// A collection of values returned by getContextAttachment.
type LookupContextAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupContextAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContextAttachmentResult)(nil)).Elem()
}

func (o LookupContextAttachmentResultOutput) ToLookupContextAttachmentResultOutput() LookupContextAttachmentResultOutput {
	return o
}

func (o LookupContextAttachmentResultOutput) ToLookupContextAttachmentResultOutputWithContext(ctx context.Context) LookupContextAttachmentResultOutput {
	return o
}

func (o LookupContextAttachmentResultOutput) ContextId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContextAttachmentResult) string { return v.ContextId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupContextAttachmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContextAttachmentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupContextAttachmentResultOutput) ModuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContextAttachmentResult) *string { return v.ModuleId }).(pulumi.StringPtrOutput)
}

func (o LookupContextAttachmentResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupContextAttachmentResult) int { return v.Priority }).(pulumi.IntOutput)
}

func (o LookupContextAttachmentResultOutput) StackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContextAttachmentResult) *string { return v.StackId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContextAttachmentResultOutput{})
}
