// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `Stack` combines source code and configuration to create a runtime environment where resources are managed. In this way it's similar to a stack in AWS CloudFormation, or a project on generic CI/CD platforms.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-spacelift/sdk/go/spacelift"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/spacelift-io/pulumi-spacelift/sdk/go/spacelift"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := spacelift.LookupStack(ctx, &GetStackArgs{
// 			StackId: "k8s-core",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupStack(ctx *pulumi.Context, args *LookupStackArgs, opts ...pulumi.InvokeOption) (*LookupStackResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupStackResult
	err := ctx.Invoke("spacelift:index/getStack:getStack", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStack.
type LookupStackArgs struct {
	AfterApplies   []string `pulumi:"afterApplies"`
	AfterDestroys  []string `pulumi:"afterDestroys"`
	AfterInits     []string `pulumi:"afterInits"`
	AfterPerforms  []string `pulumi:"afterPerforms"`
	AfterPlans     []string `pulumi:"afterPlans"`
	BeforeApplies  []string `pulumi:"beforeApplies"`
	BeforeDestroys []string `pulumi:"beforeDestroys"`
	BeforeInits    []string `pulumi:"beforeInits"`
	BeforePerforms []string `pulumi:"beforePerforms"`
	BeforePlans    []string `pulumi:"beforePlans"`
	StackId        string   `pulumi:"stackId"`
}

// A collection of values returned by getStack.
type LookupStackResult struct {
	Administrative               bool                          `pulumi:"administrative"`
	AfterApplies                 []string                      `pulumi:"afterApplies"`
	AfterDestroys                []string                      `pulumi:"afterDestroys"`
	AfterInits                   []string                      `pulumi:"afterInits"`
	AfterPerforms                []string                      `pulumi:"afterPerforms"`
	AfterPlans                   []string                      `pulumi:"afterPlans"`
	Ansibles                     []GetStackAnsible             `pulumi:"ansibles"`
	Autodeploy                   bool                          `pulumi:"autodeploy"`
	Autoretry                    bool                          `pulumi:"autoretry"`
	AwsAssumeRolePolicyStatement string                        `pulumi:"awsAssumeRolePolicyStatement"`
	AzureDevops                  []GetStackAzureDevop          `pulumi:"azureDevops"`
	BeforeApplies                []string                      `pulumi:"beforeApplies"`
	BeforeDestroys               []string                      `pulumi:"beforeDestroys"`
	BeforeInits                  []string                      `pulumi:"beforeInits"`
	BeforePerforms               []string                      `pulumi:"beforePerforms"`
	BeforePlans                  []string                      `pulumi:"beforePlans"`
	BitbucketClouds              []GetStackBitbucketCloud      `pulumi:"bitbucketClouds"`
	BitbucketDatacenters         []GetStackBitbucketDatacenter `pulumi:"bitbucketDatacenters"`
	Branch                       string                        `pulumi:"branch"`
	Cloudformations              []GetStackCloudformation      `pulumi:"cloudformations"`
	Description                  string                        `pulumi:"description"`
	EnableLocalPreview           bool                          `pulumi:"enableLocalPreview"`
	GithubEnterprises            []GetStackGithubEnterprise    `pulumi:"githubEnterprises"`
	Gitlabs                      []GetStackGitlab              `pulumi:"gitlabs"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string              `pulumi:"id"`
	Kubernetes          []GetStackKubernete `pulumi:"kubernetes"`
	Labels              []string            `pulumi:"labels"`
	ManageState         bool                `pulumi:"manageState"`
	Name                string              `pulumi:"name"`
	ProjectRoot         string              `pulumi:"projectRoot"`
	ProtectFromDeletion bool                `pulumi:"protectFromDeletion"`
	Pulumis             []GetStackPulumi    `pulumi:"pulumis"`
	Repository          string              `pulumi:"repository"`
	RunnerImage         string              `pulumi:"runnerImage"`
	Showcases           []GetStackShowcase  `pulumi:"showcases"`
	SpaceId             string              `pulumi:"spaceId"`
	StackId             string              `pulumi:"stackId"`
	TerraformVersion    string              `pulumi:"terraformVersion"`
	TerraformWorkspace  string              `pulumi:"terraformWorkspace"`
	WorkerPoolId        string              `pulumi:"workerPoolId"`
}

func LookupStackOutput(ctx *pulumi.Context, args LookupStackOutputArgs, opts ...pulumi.InvokeOption) LookupStackResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStackResult, error) {
			args := v.(LookupStackArgs)
			r, err := LookupStack(ctx, &args, opts...)
			var s LookupStackResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStackResultOutput)
}

// A collection of arguments for invoking getStack.
type LookupStackOutputArgs struct {
	AfterApplies   pulumi.StringArrayInput `pulumi:"afterApplies"`
	AfterDestroys  pulumi.StringArrayInput `pulumi:"afterDestroys"`
	AfterInits     pulumi.StringArrayInput `pulumi:"afterInits"`
	AfterPerforms  pulumi.StringArrayInput `pulumi:"afterPerforms"`
	AfterPlans     pulumi.StringArrayInput `pulumi:"afterPlans"`
	BeforeApplies  pulumi.StringArrayInput `pulumi:"beforeApplies"`
	BeforeDestroys pulumi.StringArrayInput `pulumi:"beforeDestroys"`
	BeforeInits    pulumi.StringArrayInput `pulumi:"beforeInits"`
	BeforePerforms pulumi.StringArrayInput `pulumi:"beforePerforms"`
	BeforePlans    pulumi.StringArrayInput `pulumi:"beforePlans"`
	StackId        pulumi.StringInput      `pulumi:"stackId"`
}

func (LookupStackOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStackArgs)(nil)).Elem()
}

// A collection of values returned by getStack.
type LookupStackResultOutput struct{ *pulumi.OutputState }

func (LookupStackResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStackResult)(nil)).Elem()
}

func (o LookupStackResultOutput) ToLookupStackResultOutput() LookupStackResultOutput {
	return o
}

func (o LookupStackResultOutput) ToLookupStackResultOutputWithContext(ctx context.Context) LookupStackResultOutput {
	return o
}

func (o LookupStackResultOutput) Administrative() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStackResult) bool { return v.Administrative }).(pulumi.BoolOutput)
}

func (o LookupStackResultOutput) AfterApplies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.AfterApplies }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) AfterDestroys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.AfterDestroys }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) AfterInits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.AfterInits }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) AfterPerforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.AfterPerforms }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) AfterPlans() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.AfterPlans }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) Ansibles() GetStackAnsibleArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []GetStackAnsible { return v.Ansibles }).(GetStackAnsibleArrayOutput)
}

func (o LookupStackResultOutput) Autodeploy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStackResult) bool { return v.Autodeploy }).(pulumi.BoolOutput)
}

func (o LookupStackResultOutput) Autoretry() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStackResult) bool { return v.Autoretry }).(pulumi.BoolOutput)
}

func (o LookupStackResultOutput) AwsAssumeRolePolicyStatement() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.AwsAssumeRolePolicyStatement }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) AzureDevops() GetStackAzureDevopArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []GetStackAzureDevop { return v.AzureDevops }).(GetStackAzureDevopArrayOutput)
}

func (o LookupStackResultOutput) BeforeApplies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.BeforeApplies }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) BeforeDestroys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.BeforeDestroys }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) BeforeInits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.BeforeInits }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) BeforePerforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.BeforePerforms }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) BeforePlans() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.BeforePlans }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) BitbucketClouds() GetStackBitbucketCloudArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []GetStackBitbucketCloud { return v.BitbucketClouds }).(GetStackBitbucketCloudArrayOutput)
}

func (o LookupStackResultOutput) BitbucketDatacenters() GetStackBitbucketDatacenterArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []GetStackBitbucketDatacenter { return v.BitbucketDatacenters }).(GetStackBitbucketDatacenterArrayOutput)
}

func (o LookupStackResultOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.Branch }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) Cloudformations() GetStackCloudformationArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []GetStackCloudformation { return v.Cloudformations }).(GetStackCloudformationArrayOutput)
}

func (o LookupStackResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) EnableLocalPreview() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStackResult) bool { return v.EnableLocalPreview }).(pulumi.BoolOutput)
}

func (o LookupStackResultOutput) GithubEnterprises() GetStackGithubEnterpriseArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []GetStackGithubEnterprise { return v.GithubEnterprises }).(GetStackGithubEnterpriseArrayOutput)
}

func (o LookupStackResultOutput) Gitlabs() GetStackGitlabArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []GetStackGitlab { return v.Gitlabs }).(GetStackGitlabArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupStackResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) Kubernetes() GetStackKuberneteArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []GetStackKubernete { return v.Kubernetes }).(GetStackKuberneteArrayOutput)
}

func (o LookupStackResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) ManageState() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStackResult) bool { return v.ManageState }).(pulumi.BoolOutput)
}

func (o LookupStackResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) ProjectRoot() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.ProjectRoot }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) ProtectFromDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStackResult) bool { return v.ProtectFromDeletion }).(pulumi.BoolOutput)
}

func (o LookupStackResultOutput) Pulumis() GetStackPulumiArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []GetStackPulumi { return v.Pulumis }).(GetStackPulumiArrayOutput)
}

func (o LookupStackResultOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.Repository }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) RunnerImage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.RunnerImage }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) Showcases() GetStackShowcaseArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []GetStackShowcase { return v.Showcases }).(GetStackShowcaseArrayOutput)
}

func (o LookupStackResultOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.SpaceId }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.StackId }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) TerraformVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.TerraformVersion }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) TerraformWorkspace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.TerraformWorkspace }).(pulumi.StringOutput)
}

func (o LookupStackResultOutput) WorkerPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStackResult) string { return v.WorkerPoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStackResultOutput{})
}
