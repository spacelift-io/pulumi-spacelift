// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `AzureIntegrationAttachment` represents the attachment between a reusable Azure integration and a single stack or module.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-spacelift/sdk/go/spacelift"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/spacelift-io/pulumi-spacelift/sdk/go/spacelift"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := spacelift.LookupAzureIntegrationAttachment(ctx, &GetAzureIntegrationAttachmentArgs{
// 			IntegrationId: "some-integration-id",
// 			StackId:       pulumi.StringRef("some-stack-id"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupAzureIntegrationAttachment(ctx *pulumi.Context, args *LookupAzureIntegrationAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupAzureIntegrationAttachmentResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupAzureIntegrationAttachmentResult
	err := ctx.Invoke("spacelift:index/getAzureIntegrationAttachment:getAzureIntegrationAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAzureIntegrationAttachment.
type LookupAzureIntegrationAttachmentArgs struct {
	IntegrationId string  `pulumi:"integrationId"`
	ModuleId      *string `pulumi:"moduleId"`
	StackId       *string `pulumi:"stackId"`
}

// A collection of values returned by getAzureIntegrationAttachment.
type LookupAzureIntegrationAttachmentResult struct {
	AttachmentId string `pulumi:"attachmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id             string  `pulumi:"id"`
	IntegrationId  string  `pulumi:"integrationId"`
	ModuleId       *string `pulumi:"moduleId"`
	Read           bool    `pulumi:"read"`
	StackId        *string `pulumi:"stackId"`
	SubscriptionId string  `pulumi:"subscriptionId"`
	Write          bool    `pulumi:"write"`
}

func LookupAzureIntegrationAttachmentOutput(ctx *pulumi.Context, args LookupAzureIntegrationAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupAzureIntegrationAttachmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAzureIntegrationAttachmentResult, error) {
			args := v.(LookupAzureIntegrationAttachmentArgs)
			r, err := LookupAzureIntegrationAttachment(ctx, &args, opts...)
			var s LookupAzureIntegrationAttachmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAzureIntegrationAttachmentResultOutput)
}

// A collection of arguments for invoking getAzureIntegrationAttachment.
type LookupAzureIntegrationAttachmentOutputArgs struct {
	IntegrationId pulumi.StringInput    `pulumi:"integrationId"`
	ModuleId      pulumi.StringPtrInput `pulumi:"moduleId"`
	StackId       pulumi.StringPtrInput `pulumi:"stackId"`
}

func (LookupAzureIntegrationAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureIntegrationAttachmentArgs)(nil)).Elem()
}

// A collection of values returned by getAzureIntegrationAttachment.
type LookupAzureIntegrationAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupAzureIntegrationAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureIntegrationAttachmentResult)(nil)).Elem()
}

func (o LookupAzureIntegrationAttachmentResultOutput) ToLookupAzureIntegrationAttachmentResultOutput() LookupAzureIntegrationAttachmentResultOutput {
	return o
}

func (o LookupAzureIntegrationAttachmentResultOutput) ToLookupAzureIntegrationAttachmentResultOutputWithContext(ctx context.Context) LookupAzureIntegrationAttachmentResultOutput {
	return o
}

func (o LookupAzureIntegrationAttachmentResultOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationAttachmentResult) string { return v.AttachmentId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAzureIntegrationAttachmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationAttachmentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAzureIntegrationAttachmentResultOutput) IntegrationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationAttachmentResult) string { return v.IntegrationId }).(pulumi.StringOutput)
}

func (o LookupAzureIntegrationAttachmentResultOutput) ModuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAzureIntegrationAttachmentResult) *string { return v.ModuleId }).(pulumi.StringPtrOutput)
}

func (o LookupAzureIntegrationAttachmentResultOutput) Read() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAzureIntegrationAttachmentResult) bool { return v.Read }).(pulumi.BoolOutput)
}

func (o LookupAzureIntegrationAttachmentResultOutput) StackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAzureIntegrationAttachmentResult) *string { return v.StackId }).(pulumi.StringPtrOutput)
}

func (o LookupAzureIntegrationAttachmentResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureIntegrationAttachmentResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o LookupAzureIntegrationAttachmentResultOutput) Write() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAzureIntegrationAttachmentResult) bool { return v.Write }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAzureIntegrationAttachmentResultOutput{})
}
