// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Context struct {
	pulumi.CustomResourceState

	// Free-form context description for users
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the context - should be unique in one account
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewContext registers a new resource with the given unique name, arguments, and options.
func NewContext(ctx *pulumi.Context,
	name string, args *ContextArgs, opts ...pulumi.ResourceOption) (*Context, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	var resource Context
	err := ctx.RegisterResource("spacelift:index/context:Context", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContext gets an existing Context resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContext(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContextState, opts ...pulumi.ResourceOption) (*Context, error) {
	var resource Context
	err := ctx.ReadResource("spacelift:index/context:Context", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Context resources.
type contextState struct {
	// Free-form context description for users
	Description *string `pulumi:"description"`
	// Name of the context - should be unique in one account
	Name *string `pulumi:"name"`
}

type ContextState struct {
	// Free-form context description for users
	Description pulumi.StringPtrInput
	// Name of the context - should be unique in one account
	Name pulumi.StringPtrInput
}

func (ContextState) ElementType() reflect.Type {
	return reflect.TypeOf((*contextState)(nil)).Elem()
}

type contextArgs struct {
	// Free-form context description for users
	Description *string `pulumi:"description"`
	// Name of the context - should be unique in one account
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a Context resource.
type ContextArgs struct {
	// Free-form context description for users
	Description pulumi.StringPtrInput
	// Name of the context - should be unique in one account
	Name pulumi.StringInput
}

func (ContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contextArgs)(nil)).Elem()
}

type ContextInput interface {
	pulumi.Input

	ToContextOutput() ContextOutput
	ToContextOutputWithContext(ctx context.Context) ContextOutput
}

func (*Context) ElementType() reflect.Type {
	return reflect.TypeOf((*Context)(nil))
}

func (i *Context) ToContextOutput() ContextOutput {
	return i.ToContextOutputWithContext(context.Background())
}

func (i *Context) ToContextOutputWithContext(ctx context.Context) ContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContextOutput)
}

type ContextOutput struct {
	*pulumi.OutputState
}

func (ContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Context)(nil))
}

func (o ContextOutput) ToContextOutput() ContextOutput {
	return o
}

func (o ContextOutput) ToContextOutputWithContext(ctx context.Context) ContextOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ContextOutput{})
}
