// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-spacelift/sdk/go/spacelift"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/spacelift-io/pulumi-spacelift/sdk/go/spacelift"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := spacelift.LookupModule(ctx, &GetModuleArgs{
// 			ModuleId: "k8s-module",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupModule(ctx *pulumi.Context, args *LookupModuleArgs, opts ...pulumi.InvokeOption) (*LookupModuleResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupModuleResult
	err := ctx.Invoke("spacelift:index/getModule:getModule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getModule.
type LookupModuleArgs struct {
	ModuleId string `pulumi:"moduleId"`
}

// A collection of values returned by getModule.
type LookupModuleResult struct {
	Administrative               bool                           `pulumi:"administrative"`
	AwsAssumeRolePolicyStatement string                         `pulumi:"awsAssumeRolePolicyStatement"`
	AzureDevops                  []GetModuleAzureDevop          `pulumi:"azureDevops"`
	BitbucketClouds              []GetModuleBitbucketCloud      `pulumi:"bitbucketClouds"`
	BitbucketDatacenters         []GetModuleBitbucketDatacenter `pulumi:"bitbucketDatacenters"`
	Branch                       string                         `pulumi:"branch"`
	Description                  string                         `pulumi:"description"`
	GithubEnterprises            []GetModuleGithubEnterprise    `pulumi:"githubEnterprises"`
	Gitlabs                      []GetModuleGitlab              `pulumi:"gitlabs"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string   `pulumi:"id"`
	Labels              []string `pulumi:"labels"`
	ModuleId            string   `pulumi:"moduleId"`
	Name                string   `pulumi:"name"`
	ProjectRoot         string   `pulumi:"projectRoot"`
	ProtectFromDeletion bool     `pulumi:"protectFromDeletion"`
	Repository          string   `pulumi:"repository"`
	SharedAccounts      []string `pulumi:"sharedAccounts"`
	SpaceId             string   `pulumi:"spaceId"`
	TerraformProvider   string   `pulumi:"terraformProvider"`
	WorkerPoolId        string   `pulumi:"workerPoolId"`
}

func LookupModuleOutput(ctx *pulumi.Context, args LookupModuleOutputArgs, opts ...pulumi.InvokeOption) LookupModuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupModuleResult, error) {
			args := v.(LookupModuleArgs)
			r, err := LookupModule(ctx, &args, opts...)
			var s LookupModuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupModuleResultOutput)
}

// A collection of arguments for invoking getModule.
type LookupModuleOutputArgs struct {
	ModuleId pulumi.StringInput `pulumi:"moduleId"`
}

func (LookupModuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupModuleArgs)(nil)).Elem()
}

// A collection of values returned by getModule.
type LookupModuleResultOutput struct{ *pulumi.OutputState }

func (LookupModuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupModuleResult)(nil)).Elem()
}

func (o LookupModuleResultOutput) ToLookupModuleResultOutput() LookupModuleResultOutput {
	return o
}

func (o LookupModuleResultOutput) ToLookupModuleResultOutputWithContext(ctx context.Context) LookupModuleResultOutput {
	return o
}

func (o LookupModuleResultOutput) Administrative() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupModuleResult) bool { return v.Administrative }).(pulumi.BoolOutput)
}

func (o LookupModuleResultOutput) AwsAssumeRolePolicyStatement() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.AwsAssumeRolePolicyStatement }).(pulumi.StringOutput)
}

func (o LookupModuleResultOutput) AzureDevops() GetModuleAzureDevopArrayOutput {
	return o.ApplyT(func(v LookupModuleResult) []GetModuleAzureDevop { return v.AzureDevops }).(GetModuleAzureDevopArrayOutput)
}

func (o LookupModuleResultOutput) BitbucketClouds() GetModuleBitbucketCloudArrayOutput {
	return o.ApplyT(func(v LookupModuleResult) []GetModuleBitbucketCloud { return v.BitbucketClouds }).(GetModuleBitbucketCloudArrayOutput)
}

func (o LookupModuleResultOutput) BitbucketDatacenters() GetModuleBitbucketDatacenterArrayOutput {
	return o.ApplyT(func(v LookupModuleResult) []GetModuleBitbucketDatacenter { return v.BitbucketDatacenters }).(GetModuleBitbucketDatacenterArrayOutput)
}

func (o LookupModuleResultOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.Branch }).(pulumi.StringOutput)
}

func (o LookupModuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupModuleResultOutput) GithubEnterprises() GetModuleGithubEnterpriseArrayOutput {
	return o.ApplyT(func(v LookupModuleResult) []GetModuleGithubEnterprise { return v.GithubEnterprises }).(GetModuleGithubEnterpriseArrayOutput)
}

func (o LookupModuleResultOutput) Gitlabs() GetModuleGitlabArrayOutput {
	return o.ApplyT(func(v LookupModuleResult) []GetModuleGitlab { return v.Gitlabs }).(GetModuleGitlabArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupModuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupModuleResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupModuleResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

func (o LookupModuleResultOutput) ModuleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.ModuleId }).(pulumi.StringOutput)
}

func (o LookupModuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupModuleResultOutput) ProjectRoot() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.ProjectRoot }).(pulumi.StringOutput)
}

func (o LookupModuleResultOutput) ProtectFromDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupModuleResult) bool { return v.ProtectFromDeletion }).(pulumi.BoolOutput)
}

func (o LookupModuleResultOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.Repository }).(pulumi.StringOutput)
}

func (o LookupModuleResultOutput) SharedAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupModuleResult) []string { return v.SharedAccounts }).(pulumi.StringArrayOutput)
}

func (o LookupModuleResultOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.SpaceId }).(pulumi.StringOutput)
}

func (o LookupModuleResultOutput) TerraformProvider() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.TerraformProvider }).(pulumi.StringOutput)
}

func (o LookupModuleResultOutput) WorkerPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupModuleResult) string { return v.WorkerPoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupModuleResultOutput{})
}
