// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `Webook` represents a webhook endpoint to which Spacelift sends the POST request about run state changes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/spacelift-io/pulumi-spacelift/sdk/go/spacelift"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := spacelift.NewWebook(ctx, "webhook", &spacelift.WebookArgs{
// 			Endpoint: pulumi.String("https://example.com/webhooks"),
// 			StackId:  pulumi.String("k8s-core"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ```sh
//  $ pulumi import spacelift:index/webook:Webook webhook stack/$STACK_ID/$WEBHOOK_ID
// ```
type Webook struct {
	pulumi.CustomResourceState

	// enables or disables sending webhooks. Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// endpoint to send the POST request to
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// ID of the module which triggers the webhooks
	ModuleId pulumi.StringPtrOutput `pulumi:"moduleId"`
	// secret used to sign each POST request so you're able to verify that the request comes from us. Defaults to an empty
	// value.
	Secret pulumi.StringPtrOutput `pulumi:"secret"`
	// ID of the stack which triggers the webhooks
	StackId pulumi.StringPtrOutput `pulumi:"stackId"`
}

// NewWebook registers a new resource with the given unique name, arguments, and options.
func NewWebook(ctx *pulumi.Context,
	name string, args *WebookArgs, opts ...pulumi.ResourceOption) (*Webook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Webook
	err := ctx.RegisterResource("spacelift:index/webook:Webook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebook gets an existing Webook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebookState, opts ...pulumi.ResourceOption) (*Webook, error) {
	var resource Webook
	err := ctx.ReadResource("spacelift:index/webook:Webook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Webook resources.
type webookState struct {
	// enables or disables sending webhooks. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// endpoint to send the POST request to
	Endpoint *string `pulumi:"endpoint"`
	// ID of the module which triggers the webhooks
	ModuleId *string `pulumi:"moduleId"`
	// secret used to sign each POST request so you're able to verify that the request comes from us. Defaults to an empty
	// value.
	Secret *string `pulumi:"secret"`
	// ID of the stack which triggers the webhooks
	StackId *string `pulumi:"stackId"`
}

type WebookState struct {
	// enables or disables sending webhooks. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// endpoint to send the POST request to
	Endpoint pulumi.StringPtrInput
	// ID of the module which triggers the webhooks
	ModuleId pulumi.StringPtrInput
	// secret used to sign each POST request so you're able to verify that the request comes from us. Defaults to an empty
	// value.
	Secret pulumi.StringPtrInput
	// ID of the stack which triggers the webhooks
	StackId pulumi.StringPtrInput
}

func (WebookState) ElementType() reflect.Type {
	return reflect.TypeOf((*webookState)(nil)).Elem()
}

type webookArgs struct {
	// enables or disables sending webhooks. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// endpoint to send the POST request to
	Endpoint string `pulumi:"endpoint"`
	// ID of the module which triggers the webhooks
	ModuleId *string `pulumi:"moduleId"`
	// secret used to sign each POST request so you're able to verify that the request comes from us. Defaults to an empty
	// value.
	Secret *string `pulumi:"secret"`
	// ID of the stack which triggers the webhooks
	StackId *string `pulumi:"stackId"`
}

// The set of arguments for constructing a Webook resource.
type WebookArgs struct {
	// enables or disables sending webhooks. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// endpoint to send the POST request to
	Endpoint pulumi.StringInput
	// ID of the module which triggers the webhooks
	ModuleId pulumi.StringPtrInput
	// secret used to sign each POST request so you're able to verify that the request comes from us. Defaults to an empty
	// value.
	Secret pulumi.StringPtrInput
	// ID of the stack which triggers the webhooks
	StackId pulumi.StringPtrInput
}

func (WebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webookArgs)(nil)).Elem()
}

type WebookInput interface {
	pulumi.Input

	ToWebookOutput() WebookOutput
	ToWebookOutputWithContext(ctx context.Context) WebookOutput
}

func (*Webook) ElementType() reflect.Type {
	return reflect.TypeOf((**Webook)(nil)).Elem()
}

func (i *Webook) ToWebookOutput() WebookOutput {
	return i.ToWebookOutputWithContext(context.Background())
}

func (i *Webook) ToWebookOutputWithContext(ctx context.Context) WebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebookOutput)
}

// WebookArrayInput is an input type that accepts WebookArray and WebookArrayOutput values.
// You can construct a concrete instance of `WebookArrayInput` via:
//
//          WebookArray{ WebookArgs{...} }
type WebookArrayInput interface {
	pulumi.Input

	ToWebookArrayOutput() WebookArrayOutput
	ToWebookArrayOutputWithContext(context.Context) WebookArrayOutput
}

type WebookArray []WebookInput

func (WebookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Webook)(nil)).Elem()
}

func (i WebookArray) ToWebookArrayOutput() WebookArrayOutput {
	return i.ToWebookArrayOutputWithContext(context.Background())
}

func (i WebookArray) ToWebookArrayOutputWithContext(ctx context.Context) WebookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebookArrayOutput)
}

// WebookMapInput is an input type that accepts WebookMap and WebookMapOutput values.
// You can construct a concrete instance of `WebookMapInput` via:
//
//          WebookMap{ "key": WebookArgs{...} }
type WebookMapInput interface {
	pulumi.Input

	ToWebookMapOutput() WebookMapOutput
	ToWebookMapOutputWithContext(context.Context) WebookMapOutput
}

type WebookMap map[string]WebookInput

func (WebookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Webook)(nil)).Elem()
}

func (i WebookMap) ToWebookMapOutput() WebookMapOutput {
	return i.ToWebookMapOutputWithContext(context.Background())
}

func (i WebookMap) ToWebookMapOutputWithContext(ctx context.Context) WebookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebookMapOutput)
}

type WebookOutput struct{ *pulumi.OutputState }

func (WebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Webook)(nil)).Elem()
}

func (o WebookOutput) ToWebookOutput() WebookOutput {
	return o
}

func (o WebookOutput) ToWebookOutputWithContext(ctx context.Context) WebookOutput {
	return o
}

// enables or disables sending webhooks. Defaults to `true`.
func (o WebookOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Webook) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// endpoint to send the POST request to
func (o WebookOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Webook) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// ID of the module which triggers the webhooks
func (o WebookOutput) ModuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webook) pulumi.StringPtrOutput { return v.ModuleId }).(pulumi.StringPtrOutput)
}

// secret used to sign each POST request so you're able to verify that the request comes from us. Defaults to an empty
// value.
func (o WebookOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webook) pulumi.StringPtrOutput { return v.Secret }).(pulumi.StringPtrOutput)
}

// ID of the stack which triggers the webhooks
func (o WebookOutput) StackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webook) pulumi.StringPtrOutput { return v.StackId }).(pulumi.StringPtrOutput)
}

type WebookArrayOutput struct{ *pulumi.OutputState }

func (WebookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Webook)(nil)).Elem()
}

func (o WebookArrayOutput) ToWebookArrayOutput() WebookArrayOutput {
	return o
}

func (o WebookArrayOutput) ToWebookArrayOutputWithContext(ctx context.Context) WebookArrayOutput {
	return o
}

func (o WebookArrayOutput) Index(i pulumi.IntInput) WebookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Webook {
		return vs[0].([]*Webook)[vs[1].(int)]
	}).(WebookOutput)
}

type WebookMapOutput struct{ *pulumi.OutputState }

func (WebookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Webook)(nil)).Elem()
}

func (o WebookMapOutput) ToWebookMapOutput() WebookMapOutput {
	return o
}

func (o WebookMapOutput) ToWebookMapOutputWithContext(ctx context.Context) WebookMapOutput {
	return o
}

func (o WebookMapOutput) MapIndex(k pulumi.StringInput) WebookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Webook {
		return vs[0].(map[string]*Webook)[vs[1].(string)]
	}).(WebookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebookInput)(nil)).Elem(), &Webook{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebookArrayInput)(nil)).Elem(), WebookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebookMapInput)(nil)).Elem(), WebookMap{})
	pulumi.RegisterOutputType(WebookOutput{})
	pulumi.RegisterOutputType(WebookArrayOutput{})
	pulumi.RegisterOutputType(WebookMapOutput{})
}
