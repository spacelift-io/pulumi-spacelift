// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift/internal"
)

// `SecurityEmail` represents an email address that receives notifications about security issues in Spacelift.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := spacelift.NewSecurityEmail(ctx, "example", &spacelift.SecurityEmailArgs{
//				Email: pulumi.String("user@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SecurityEmail struct {
	pulumi.CustomResourceState

	// Email address to which the security notifications are sent
	Email pulumi.StringOutput `pulumi:"email"`
}

// NewSecurityEmail registers a new resource with the given unique name, arguments, and options.
func NewSecurityEmail(ctx *pulumi.Context,
	name string, args *SecurityEmailArgs, opts ...pulumi.ResourceOption) (*SecurityEmail, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Email == nil {
		return nil, errors.New("invalid value for required argument 'Email'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityEmail
	err := ctx.RegisterResource("spacelift:index/securityEmail:SecurityEmail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityEmail gets an existing SecurityEmail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityEmail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityEmailState, opts ...pulumi.ResourceOption) (*SecurityEmail, error) {
	var resource SecurityEmail
	err := ctx.ReadResource("spacelift:index/securityEmail:SecurityEmail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityEmail resources.
type securityEmailState struct {
	// Email address to which the security notifications are sent
	Email *string `pulumi:"email"`
}

type SecurityEmailState struct {
	// Email address to which the security notifications are sent
	Email pulumi.StringPtrInput
}

func (SecurityEmailState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityEmailState)(nil)).Elem()
}

type securityEmailArgs struct {
	// Email address to which the security notifications are sent
	Email string `pulumi:"email"`
}

// The set of arguments for constructing a SecurityEmail resource.
type SecurityEmailArgs struct {
	// Email address to which the security notifications are sent
	Email pulumi.StringInput
}

func (SecurityEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityEmailArgs)(nil)).Elem()
}

type SecurityEmailInput interface {
	pulumi.Input

	ToSecurityEmailOutput() SecurityEmailOutput
	ToSecurityEmailOutputWithContext(ctx context.Context) SecurityEmailOutput
}

func (*SecurityEmail) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityEmail)(nil)).Elem()
}

func (i *SecurityEmail) ToSecurityEmailOutput() SecurityEmailOutput {
	return i.ToSecurityEmailOutputWithContext(context.Background())
}

func (i *SecurityEmail) ToSecurityEmailOutputWithContext(ctx context.Context) SecurityEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityEmailOutput)
}

// SecurityEmailArrayInput is an input type that accepts SecurityEmailArray and SecurityEmailArrayOutput values.
// You can construct a concrete instance of `SecurityEmailArrayInput` via:
//
//	SecurityEmailArray{ SecurityEmailArgs{...} }
type SecurityEmailArrayInput interface {
	pulumi.Input

	ToSecurityEmailArrayOutput() SecurityEmailArrayOutput
	ToSecurityEmailArrayOutputWithContext(context.Context) SecurityEmailArrayOutput
}

type SecurityEmailArray []SecurityEmailInput

func (SecurityEmailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityEmail)(nil)).Elem()
}

func (i SecurityEmailArray) ToSecurityEmailArrayOutput() SecurityEmailArrayOutput {
	return i.ToSecurityEmailArrayOutputWithContext(context.Background())
}

func (i SecurityEmailArray) ToSecurityEmailArrayOutputWithContext(ctx context.Context) SecurityEmailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityEmailArrayOutput)
}

// SecurityEmailMapInput is an input type that accepts SecurityEmailMap and SecurityEmailMapOutput values.
// You can construct a concrete instance of `SecurityEmailMapInput` via:
//
//	SecurityEmailMap{ "key": SecurityEmailArgs{...} }
type SecurityEmailMapInput interface {
	pulumi.Input

	ToSecurityEmailMapOutput() SecurityEmailMapOutput
	ToSecurityEmailMapOutputWithContext(context.Context) SecurityEmailMapOutput
}

type SecurityEmailMap map[string]SecurityEmailInput

func (SecurityEmailMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityEmail)(nil)).Elem()
}

func (i SecurityEmailMap) ToSecurityEmailMapOutput() SecurityEmailMapOutput {
	return i.ToSecurityEmailMapOutputWithContext(context.Background())
}

func (i SecurityEmailMap) ToSecurityEmailMapOutputWithContext(ctx context.Context) SecurityEmailMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityEmailMapOutput)
}

type SecurityEmailOutput struct{ *pulumi.OutputState }

func (SecurityEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityEmail)(nil)).Elem()
}

func (o SecurityEmailOutput) ToSecurityEmailOutput() SecurityEmailOutput {
	return o
}

func (o SecurityEmailOutput) ToSecurityEmailOutputWithContext(ctx context.Context) SecurityEmailOutput {
	return o
}

// Email address to which the security notifications are sent
func (o SecurityEmailOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityEmail) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

type SecurityEmailArrayOutput struct{ *pulumi.OutputState }

func (SecurityEmailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityEmail)(nil)).Elem()
}

func (o SecurityEmailArrayOutput) ToSecurityEmailArrayOutput() SecurityEmailArrayOutput {
	return o
}

func (o SecurityEmailArrayOutput) ToSecurityEmailArrayOutputWithContext(ctx context.Context) SecurityEmailArrayOutput {
	return o
}

func (o SecurityEmailArrayOutput) Index(i pulumi.IntInput) SecurityEmailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityEmail {
		return vs[0].([]*SecurityEmail)[vs[1].(int)]
	}).(SecurityEmailOutput)
}

type SecurityEmailMapOutput struct{ *pulumi.OutputState }

func (SecurityEmailMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityEmail)(nil)).Elem()
}

func (o SecurityEmailMapOutput) ToSecurityEmailMapOutput() SecurityEmailMapOutput {
	return o
}

func (o SecurityEmailMapOutput) ToSecurityEmailMapOutputWithContext(ctx context.Context) SecurityEmailMapOutput {
	return o
}

func (o SecurityEmailMapOutput) MapIndex(k pulumi.StringInput) SecurityEmailOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityEmail {
		return vs[0].(map[string]*SecurityEmail)[vs[1].(string)]
	}).(SecurityEmailOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityEmailInput)(nil)).Elem(), &SecurityEmail{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityEmailArrayInput)(nil)).Elem(), SecurityEmailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityEmailMapInput)(nil)).Elem(), SecurityEmailMap{})
	pulumi.RegisterOutputType(SecurityEmailOutput{})
	pulumi.RegisterOutputType(SecurityEmailArrayOutput{})
	pulumi.RegisterOutputType(SecurityEmailMapOutput{})
}
