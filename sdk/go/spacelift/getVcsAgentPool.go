// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift/internal"
)

// `VcsAgentPool` represents a Spacelift **VCS agent pool** - a logical group of proxies allowing Spacelift to access private VCS installations
func LookupVcsAgentPool(ctx *pulumi.Context, args *LookupVcsAgentPoolArgs, opts ...pulumi.InvokeOption) (*LookupVcsAgentPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVcsAgentPoolResult
	err := ctx.Invoke("spacelift:index/getVcsAgentPool:getVcsAgentPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVcsAgentPool.
type LookupVcsAgentPoolArgs struct {
	// ID of the VCS agent pool to retrieve
	VcsAgentPoolId string `pulumi:"vcsAgentPoolId"`
}

// A collection of values returned by getVcsAgentPool.
type LookupVcsAgentPoolResult struct {
	// Free-form VCS agent pool description for users
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the VCS agent pool
	Name string `pulumi:"name"`
	// ID of the VCS agent pool to retrieve
	VcsAgentPoolId string `pulumi:"vcsAgentPoolId"`
}

func LookupVcsAgentPoolOutput(ctx *pulumi.Context, args LookupVcsAgentPoolOutputArgs, opts ...pulumi.InvokeOption) LookupVcsAgentPoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVcsAgentPoolResult, error) {
			args := v.(LookupVcsAgentPoolArgs)
			r, err := LookupVcsAgentPool(ctx, &args, opts...)
			var s LookupVcsAgentPoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVcsAgentPoolResultOutput)
}

// A collection of arguments for invoking getVcsAgentPool.
type LookupVcsAgentPoolOutputArgs struct {
	// ID of the VCS agent pool to retrieve
	VcsAgentPoolId pulumi.StringInput `pulumi:"vcsAgentPoolId"`
}

func (LookupVcsAgentPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVcsAgentPoolArgs)(nil)).Elem()
}

// A collection of values returned by getVcsAgentPool.
type LookupVcsAgentPoolResultOutput struct{ *pulumi.OutputState }

func (LookupVcsAgentPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVcsAgentPoolResult)(nil)).Elem()
}

func (o LookupVcsAgentPoolResultOutput) ToLookupVcsAgentPoolResultOutput() LookupVcsAgentPoolResultOutput {
	return o
}

func (o LookupVcsAgentPoolResultOutput) ToLookupVcsAgentPoolResultOutputWithContext(ctx context.Context) LookupVcsAgentPoolResultOutput {
	return o
}

// Free-form VCS agent pool description for users
func (o LookupVcsAgentPoolResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVcsAgentPoolResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVcsAgentPoolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVcsAgentPoolResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the VCS agent pool
func (o LookupVcsAgentPoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVcsAgentPoolResult) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the VCS agent pool to retrieve
func (o LookupVcsAgentPoolResultOutput) VcsAgentPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVcsAgentPoolResult) string { return v.VcsAgentPoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVcsAgentPoolResultOutput{})
}
