// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "spacelift:index/awsIntegration:AwsIntegration":
		r = &AwsIntegration{}
	case "spacelift:index/awsIntegrationAttachment:AwsIntegrationAttachment":
		r = &AwsIntegrationAttachment{}
	case "spacelift:index/awsRole:AwsRole":
		r = &AwsRole{}
	case "spacelift:index/azureIntegration:AzureIntegration":
		r = &AzureIntegration{}
	case "spacelift:index/azureIntegrationAttachment:AzureIntegrationAttachment":
		r = &AzureIntegrationAttachment{}
	case "spacelift:index/context:Context":
		r = &Context{}
	case "spacelift:index/contextAttachment:ContextAttachment":
		r = &ContextAttachment{}
	case "spacelift:index/driftDetection:DriftDetection":
		r = &DriftDetection{}
	case "spacelift:index/environmentVariable:EnvironmentVariable":
		r = &EnvironmentVariable{}
	case "spacelift:index/gcpServiceAccount:GcpServiceAccount":
		r = &GcpServiceAccount{}
	case "spacelift:index/module:Module":
		r = &Module{}
	case "spacelift:index/mountedfile:Mountedfile":
		r = &Mountedfile{}
	case "spacelift:index/policy:Policy":
		r = &Policy{}
	case "spacelift:index/policyAttachment:PolicyAttachment":
		r = &PolicyAttachment{}
	case "spacelift:index/run:Run":
		r = &Run{}
	case "spacelift:index/space:Space":
		r = &Space{}
	case "spacelift:index/stack:Stack":
		r = &Stack{}
	case "spacelift:index/stackAwsRole:StackAwsRole":
		r = &StackAwsRole{}
	case "spacelift:index/stackDestructor:StackDestructor":
		r = &StackDestructor{}
	case "spacelift:index/stackGcpServiceAccount:StackGcpServiceAccount":
		r = &StackGcpServiceAccount{}
	case "spacelift:index/vcsAgentPool:VcsAgentPool":
		r = &VcsAgentPool{}
	case "spacelift:index/webook:Webook":
		r = &Webook{}
	case "spacelift:index/workerPool:WorkerPool":
		r = &WorkerPool{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:spacelift" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, _ := PkgVersion()
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/awsIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/awsIntegrationAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/awsRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/azureIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/azureIntegrationAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/context",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/contextAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/driftDetection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/environmentVariable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/gcpServiceAccount",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/module",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/mountedfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/policy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/policyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/run",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/space",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/stack",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/stackAwsRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/stackDestructor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/stackGcpServiceAccount",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/vcsAgentPool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/webook",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"spacelift",
		"index/workerPool",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"spacelift",
		&pkg{version},
	)
}
