// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift/internal"
)

// `getSpaceByPath` represents a Spacelift **space** - a collection of resources such as stacks, modules, policies, etc. Allows for more granular access control. Can have a parent space. In contrary to `Space`, this resource is identified by a path, not by an ID. For this data source to work, path must be unique. If there are multiple spaces with the same path, this datasource will fail.
// **Disclaimer:**
// This datasource can only be used in a stack that resides in a space with inheritance enabled. In addition, the parent spaces (excluding root) must also have inheritance enabled.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			space, err := spacelift.GetSpaceByPath(ctx, &spacelift.GetSpaceByPathArgs{
//				SpacePath: "root/second space/my space",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("spaceDescription", space.Description)
//			return nil
//		})
//	}
//
// ```
func GetSpaceByPath(ctx *pulumi.Context, args *GetSpaceByPathArgs, opts ...pulumi.InvokeOption) (*GetSpaceByPathResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSpaceByPathResult
	err := ctx.Invoke("spacelift:index/getSpaceByPath:getSpaceByPath", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSpaceByPath.
type GetSpaceByPathArgs struct {
	// path to the space - a series of space names separated by `/`
	SpacePath string `pulumi:"spacePath"`
}

// A collection of values returned by getSpaceByPath.
type GetSpaceByPathResult struct {
	// free-form space description for users
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// indication whether access to this space inherits read access to entities from the parent space
	InheritEntities bool `pulumi:"inheritEntities"`
	// list of labels describing a space
	Labels []string `pulumi:"labels"`
	// name of the space
	Name string `pulumi:"name"`
	// immutable ID (slug) of parent space
	ParentSpaceId string `pulumi:"parentSpaceId"`
	// path to the space - a series of space names separated by `/`
	SpacePath string `pulumi:"spacePath"`
}

func GetSpaceByPathOutput(ctx *pulumi.Context, args GetSpaceByPathOutputArgs, opts ...pulumi.InvokeOption) GetSpaceByPathResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSpaceByPathResult, error) {
			args := v.(GetSpaceByPathArgs)
			r, err := GetSpaceByPath(ctx, &args, opts...)
			var s GetSpaceByPathResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSpaceByPathResultOutput)
}

// A collection of arguments for invoking getSpaceByPath.
type GetSpaceByPathOutputArgs struct {
	// path to the space - a series of space names separated by `/`
	SpacePath pulumi.StringInput `pulumi:"spacePath"`
}

func (GetSpaceByPathOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpaceByPathArgs)(nil)).Elem()
}

// A collection of values returned by getSpaceByPath.
type GetSpaceByPathResultOutput struct{ *pulumi.OutputState }

func (GetSpaceByPathResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpaceByPathResult)(nil)).Elem()
}

func (o GetSpaceByPathResultOutput) ToGetSpaceByPathResultOutput() GetSpaceByPathResultOutput {
	return o
}

func (o GetSpaceByPathResultOutput) ToGetSpaceByPathResultOutputWithContext(ctx context.Context) GetSpaceByPathResultOutput {
	return o
}

// free-form space description for users
func (o GetSpaceByPathResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpaceByPathResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSpaceByPathResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpaceByPathResult) string { return v.Id }).(pulumi.StringOutput)
}

// indication whether access to this space inherits read access to entities from the parent space
func (o GetSpaceByPathResultOutput) InheritEntities() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSpaceByPathResult) bool { return v.InheritEntities }).(pulumi.BoolOutput)
}

// list of labels describing a space
func (o GetSpaceByPathResultOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSpaceByPathResult) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// name of the space
func (o GetSpaceByPathResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpaceByPathResult) string { return v.Name }).(pulumi.StringOutput)
}

// immutable ID (slug) of parent space
func (o GetSpaceByPathResultOutput) ParentSpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpaceByPathResult) string { return v.ParentSpaceId }).(pulumi.StringOutput)
}

// path to the space - a series of space names separated by `/`
func (o GetSpaceByPathResultOutput) SpacePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpaceByPathResult) string { return v.SpacePath }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSpaceByPathResultOutput{})
}
