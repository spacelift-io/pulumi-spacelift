// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift/internal"
)

// `Webhook` represents a webhook endpoint to which Spacelift sends the POST request about run state changes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/spacelift-io/pulumi-spacelift/sdk/v2/go/spacelift"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := spacelift.LookupWebhook(ctx, &spacelift.LookupWebhookArgs{
//				WebhookId: spacelift_webhook.Webhook.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWebhook(ctx *pulumi.Context, args *LookupWebhookArgs, opts ...pulumi.InvokeOption) (*LookupWebhookResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWebhookResult
	err := ctx.Invoke("spacelift:index/getWebhook:getWebhook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWebhook.
type LookupWebhookArgs struct {
	// ID of the stack which triggers the webhooks
	ModuleId *string `pulumi:"moduleId"`
	// ID of the stack which triggers the webhooks
	StackId *string `pulumi:"stackId"`
	// ID of the webhook
	WebhookId string `pulumi:"webhookId"`
}

// A collection of values returned by getWebhook.
type LookupWebhookResult struct {
	// enables or disables sending webhooks
	Enabled bool `pulumi:"enabled"`
	// endpoint to send the POST request to
	Endpoint string `pulumi:"endpoint"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// ID of the stack which triggers the webhooks
	ModuleId *string `pulumi:"moduleId"`
	// secret used to sign each POST request so you're able to verify that the request comes from us
	Secret string `pulumi:"secret"`
	// ID of the stack which triggers the webhooks
	StackId *string `pulumi:"stackId"`
	// ID of the webhook
	WebhookId string `pulumi:"webhookId"`
}

func LookupWebhookOutput(ctx *pulumi.Context, args LookupWebhookOutputArgs, opts ...pulumi.InvokeOption) LookupWebhookResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWebhookResult, error) {
			args := v.(LookupWebhookArgs)
			r, err := LookupWebhook(ctx, &args, opts...)
			var s LookupWebhookResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWebhookResultOutput)
}

// A collection of arguments for invoking getWebhook.
type LookupWebhookOutputArgs struct {
	// ID of the stack which triggers the webhooks
	ModuleId pulumi.StringPtrInput `pulumi:"moduleId"`
	// ID of the stack which triggers the webhooks
	StackId pulumi.StringPtrInput `pulumi:"stackId"`
	// ID of the webhook
	WebhookId pulumi.StringInput `pulumi:"webhookId"`
}

func (LookupWebhookOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebhookArgs)(nil)).Elem()
}

// A collection of values returned by getWebhook.
type LookupWebhookResultOutput struct{ *pulumi.OutputState }

func (LookupWebhookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebhookResult)(nil)).Elem()
}

func (o LookupWebhookResultOutput) ToLookupWebhookResultOutput() LookupWebhookResultOutput {
	return o
}

func (o LookupWebhookResultOutput) ToLookupWebhookResultOutputWithContext(ctx context.Context) LookupWebhookResultOutput {
	return o
}

func (o LookupWebhookResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupWebhookResult] {
	return pulumix.Output[LookupWebhookResult]{
		OutputState: o.OutputState,
	}
}

// enables or disables sending webhooks
func (o LookupWebhookResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWebhookResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// endpoint to send the POST request to
func (o LookupWebhookResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebhookResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWebhookResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebhookResult) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the stack which triggers the webhooks
func (o LookupWebhookResultOutput) ModuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebhookResult) *string { return v.ModuleId }).(pulumi.StringPtrOutput)
}

// secret used to sign each POST request so you're able to verify that the request comes from us
func (o LookupWebhookResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebhookResult) string { return v.Secret }).(pulumi.StringOutput)
}

// ID of the stack which triggers the webhooks
func (o LookupWebhookResultOutput) StackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebhookResult) *string { return v.StackId }).(pulumi.StringPtrOutput)
}

// ID of the webhook
func (o LookupWebhookResultOutput) WebhookId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebhookResult) string { return v.WebhookId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebhookResultOutput{})
}
