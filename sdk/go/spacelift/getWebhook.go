// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spacelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `Webook` represents a webhook endpoint to which Spacelift sends the POST request about run state changes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/spacelift-io/pulumi-spacelift/sdk/go/spacelift"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := spacelift.GetWebhook(ctx, &GetWebhookArgs{
// 			WebhookId: spacelift_webhook.Webhook.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetWebhook(ctx *pulumi.Context, args *GetWebhookArgs, opts ...pulumi.InvokeOption) (*GetWebhookResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetWebhookResult
	err := ctx.Invoke("spacelift:index/getWebhook:getWebhook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWebhook.
type GetWebhookArgs struct {
	// ID of the stack which triggers the webhooks
	ModuleId *string `pulumi:"moduleId"`
	// ID of the stack which triggers the webhooks
	StackId *string `pulumi:"stackId"`
	// ID of the webhook
	WebhookId string `pulumi:"webhookId"`
}

// A collection of values returned by getWebhook.
type GetWebhookResult struct {
	// enables or disables sending webhooks
	Enabled bool `pulumi:"enabled"`
	// endpoint to send the POST request to
	Endpoint string `pulumi:"endpoint"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// ID of the stack which triggers the webhooks
	ModuleId *string `pulumi:"moduleId"`
	// secret used to sign each POST request so you're able to verify that the request comes from us
	Secret string `pulumi:"secret"`
	// ID of the stack which triggers the webhooks
	StackId *string `pulumi:"stackId"`
	// ID of the webhook
	WebhookId string `pulumi:"webhookId"`
}

func GetWebhookOutput(ctx *pulumi.Context, args GetWebhookOutputArgs, opts ...pulumi.InvokeOption) GetWebhookResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetWebhookResult, error) {
			args := v.(GetWebhookArgs)
			r, err := GetWebhook(ctx, &args, opts...)
			var s GetWebhookResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetWebhookResultOutput)
}

// A collection of arguments for invoking getWebhook.
type GetWebhookOutputArgs struct {
	// ID of the stack which triggers the webhooks
	ModuleId pulumi.StringPtrInput `pulumi:"moduleId"`
	// ID of the stack which triggers the webhooks
	StackId pulumi.StringPtrInput `pulumi:"stackId"`
	// ID of the webhook
	WebhookId pulumi.StringInput `pulumi:"webhookId"`
}

func (GetWebhookOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhookArgs)(nil)).Elem()
}

// A collection of values returned by getWebhook.
type GetWebhookResultOutput struct{ *pulumi.OutputState }

func (GetWebhookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhookResult)(nil)).Elem()
}

func (o GetWebhookResultOutput) ToGetWebhookResultOutput() GetWebhookResultOutput {
	return o
}

func (o GetWebhookResultOutput) ToGetWebhookResultOutputWithContext(ctx context.Context) GetWebhookResultOutput {
	return o
}

// enables or disables sending webhooks
func (o GetWebhookResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWebhookResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// endpoint to send the POST request to
func (o GetWebhookResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetWebhookResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the stack which triggers the webhooks
func (o GetWebhookResultOutput) ModuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWebhookResult) *string { return v.ModuleId }).(pulumi.StringPtrOutput)
}

// secret used to sign each POST request so you're able to verify that the request comes from us
func (o GetWebhookResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.Secret }).(pulumi.StringOutput)
}

// ID of the stack which triggers the webhooks
func (o GetWebhookResultOutput) StackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWebhookResult) *string { return v.StackId }).(pulumi.StringPtrOutput)
}

// ID of the webhook
func (o GetWebhookResultOutput) WebhookId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.WebhookId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetWebhookResultOutput{})
}
