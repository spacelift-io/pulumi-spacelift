name: Prod deployment

on:
  push:
    branches:
      - main
jobs:
  prod-provider-deployment:
    name: Build and upload provider
    runs-on: ubuntu-latest
    container: golang:1.16-alpine
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Install build dependencies
        run: |
          apk add --no-cache alpine-sdk git python3 py3-pip
          pip3 install --upgrade pip
          pip3 install awscli

      - name: Check out repository code
        uses: actions/checkout@master

      - name: Treat repo as safe
        run: git config --global --add safe.directory /__w/pulumi-spacelift/pulumi-spacelift

      - name: Remove Pulumi directory
        run: rm -rf /github/home/.pulumi

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1

      - name: Tag version
        run: git tag -d `git tag | grep -E '.'` && git tag v0.0.0

      - name: Print version
        run: pulumictl get version

      - name: Build provider
        run: make provider
        env:
          PROVIDER_OS: ${{ matrix.provider_os }}

      - name: Create package directory
        run: mkdir package && mv bin/pulumi-resource-* package/ && ls -la package/

      - name: Create package
        run: cd package && tar -zcvf pulumi-resource-spacelift-v0.0.0-${{matrix.provider_os}}-amd64.tar.gz pulumi-resource-*

      - name: Create upload directory
        run: mkdir -p upload/pulumi-plugins && mv package/*.tar.gz upload/pulumi-plugins/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900

      - name: Upload the provider binary to downloads.spacelift.io
        run: >-
          aws s3 sync
          upload/ s3://${{ secrets.AWS_S3_BUCKET }}/
          --no-progress

      - name: Invalidate downloads.spacelift.io cache
        run: >-
          aws cloudfront create-invalidation
          --distribution-id ${{ secrets.DISTRIBUTION }}
          --paths "/*"

    strategy:
      matrix:
        provider_os:
          - darwin
          - linux
          - windows
